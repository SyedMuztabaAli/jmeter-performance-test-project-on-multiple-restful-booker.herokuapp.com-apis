/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 297.0, "minX": 0.0, "maxY": 6428.0, "series": [{"data": [[0.0, 304.0], [0.1, 304.0], [0.2, 304.0], [0.3, 305.0], [0.4, 305.0], [0.5, 305.0], [0.6, 305.0], [0.7, 305.0], [0.8, 309.0], [0.9, 309.0], [1.0, 309.0], [1.1, 309.0], [1.2, 309.0], [1.3, 310.0], [1.4, 310.0], [1.5, 310.0], [1.6, 310.0], [1.7, 310.0], [1.8, 311.0], [1.9, 311.0], [2.0, 311.0], [2.1, 311.0], [2.2, 311.0], [2.3, 311.0], [2.4, 311.0], [2.5, 311.0], [2.6, 311.0], [2.7, 311.0], [2.8, 312.0], [2.9, 312.0], [3.0, 313.0], [3.1, 313.0], [3.2, 313.0], [3.3, 313.0], [3.4, 313.0], [3.5, 314.0], [3.6, 314.0], [3.7, 314.0], [3.8, 314.0], [3.9, 314.0], [4.0, 315.0], [4.1, 315.0], [4.2, 315.0], [4.3, 315.0], [4.4, 315.0], [4.5, 315.0], [4.6, 315.0], [4.7, 315.0], [4.8, 315.0], [4.9, 315.0], [5.0, 316.0], [5.1, 316.0], [5.2, 316.0], [5.3, 317.0], [5.4, 317.0], [5.5, 317.0], [5.6, 317.0], [5.7, 317.0], [5.8, 317.0], [5.9, 317.0], [6.0, 317.0], [6.1, 317.0], [6.2, 317.0], [6.3, 317.0], [6.4, 317.0], [6.5, 318.0], [6.6, 318.0], [6.7, 318.0], [6.8, 318.0], [6.9, 318.0], [7.0, 319.0], [7.1, 319.0], [7.2, 319.0], [7.3, 319.0], [7.4, 319.0], [7.5, 319.0], [7.6, 319.0], [7.7, 319.0], [7.8, 319.0], [7.9, 319.0], [8.0, 319.0], [8.1, 319.0], [8.2, 319.0], [8.3, 319.0], [8.4, 319.0], [8.5, 319.0], [8.6, 319.0], [8.7, 319.0], [8.8, 319.0], [8.9, 319.0], [9.0, 320.0], [9.1, 320.0], [9.2, 320.0], [9.3, 320.0], [9.4, 320.0], [9.5, 320.0], [9.6, 320.0], [9.7, 320.0], [9.8, 320.0], [9.9, 320.0], [10.0, 320.0], [10.1, 320.0], [10.2, 320.0], [10.3, 321.0], [10.4, 321.0], [10.5, 321.0], [10.6, 321.0], [10.7, 321.0], [10.8, 321.0], [10.9, 321.0], [11.0, 321.0], [11.1, 321.0], [11.2, 321.0], [11.3, 322.0], [11.4, 322.0], [11.5, 322.0], [11.6, 322.0], [11.7, 322.0], [11.8, 322.0], [11.9, 322.0], [12.0, 322.0], [12.1, 322.0], [12.2, 322.0], [12.3, 323.0], [12.4, 323.0], [12.5, 323.0], [12.6, 323.0], [12.7, 323.0], [12.8, 323.0], [12.9, 323.0], [13.0, 323.0], [13.1, 323.0], [13.2, 323.0], [13.3, 323.0], [13.4, 323.0], [13.5, 324.0], [13.6, 324.0], [13.7, 324.0], [13.8, 324.0], [13.9, 324.0], [14.0, 324.0], [14.1, 324.0], [14.2, 324.0], [14.3, 325.0], [14.4, 325.0], [14.5, 325.0], [14.6, 325.0], [14.7, 325.0], [14.8, 325.0], [14.9, 325.0], [15.0, 326.0], [15.1, 326.0], [15.2, 326.0], [15.3, 326.0], [15.4, 326.0], [15.5, 326.0], [15.6, 326.0], [15.7, 326.0], [15.8, 326.0], [15.9, 326.0], [16.0, 326.0], [16.1, 326.0], [16.2, 326.0], [16.3, 326.0], [16.4, 326.0], [16.5, 326.0], [16.6, 326.0], [16.7, 326.0], [16.8, 327.0], [16.9, 327.0], [17.0, 327.0], [17.1, 327.0], [17.2, 327.0], [17.3, 327.0], [17.4, 327.0], [17.5, 327.0], [17.6, 327.0], [17.7, 327.0], [17.8, 328.0], [17.9, 328.0], [18.0, 328.0], [18.1, 328.0], [18.2, 328.0], [18.3, 329.0], [18.4, 329.0], [18.5, 329.0], [18.6, 329.0], [18.7, 329.0], [18.8, 329.0], [18.9, 329.0], [19.0, 331.0], [19.1, 331.0], [19.2, 331.0], [19.3, 331.0], [19.4, 331.0], [19.5, 331.0], [19.6, 331.0], [19.7, 331.0], [19.8, 332.0], [19.9, 332.0], [20.0, 332.0], [20.1, 332.0], [20.2, 332.0], [20.3, 332.0], [20.4, 332.0], [20.5, 332.0], [20.6, 332.0], [20.7, 332.0], [20.8, 333.0], [20.9, 333.0], [21.0, 333.0], [21.1, 333.0], [21.2, 333.0], [21.3, 334.0], [21.4, 334.0], [21.5, 335.0], [21.6, 335.0], [21.7, 335.0], [21.8, 335.0], [21.9, 335.0], [22.0, 336.0], [22.1, 336.0], [22.2, 336.0], [22.3, 336.0], [22.4, 336.0], [22.5, 336.0], [22.6, 336.0], [22.7, 336.0], [22.8, 336.0], [22.9, 336.0], [23.0, 337.0], [23.1, 337.0], [23.2, 337.0], [23.3, 337.0], [23.4, 337.0], [23.5, 337.0], [23.6, 337.0], [23.7, 337.0], [23.8, 338.0], [23.9, 338.0], [24.0, 338.0], [24.1, 338.0], [24.2, 338.0], [24.3, 338.0], [24.4, 338.0], [24.5, 338.0], [24.6, 338.0], [24.7, 338.0], [24.8, 338.0], [24.9, 338.0], [25.0, 339.0], [25.1, 339.0], [25.2, 339.0], [25.3, 339.0], [25.4, 339.0], [25.5, 339.0], [25.6, 339.0], [25.7, 339.0], [25.8, 340.0], [25.9, 340.0], [26.0, 340.0], [26.1, 340.0], [26.2, 340.0], [26.3, 340.0], [26.4, 340.0], [26.5, 340.0], [26.6, 340.0], [26.7, 340.0], [26.8, 340.0], [26.9, 340.0], [27.0, 341.0], [27.1, 341.0], [27.2, 341.0], [27.3, 341.0], [27.4, 341.0], [27.5, 342.0], [27.6, 342.0], [27.7, 342.0], [27.8, 342.0], [27.9, 342.0], [28.0, 342.0], [28.1, 342.0], [28.2, 342.0], [28.3, 343.0], [28.4, 343.0], [28.5, 344.0], [28.6, 344.0], [28.7, 344.0], [28.8, 344.0], [28.9, 344.0], [29.0, 344.0], [29.1, 344.0], [29.2, 344.0], [29.3, 344.0], [29.4, 344.0], [29.5, 344.0], [29.6, 344.0], [29.7, 344.0], [29.8, 344.0], [29.9, 344.0], [30.0, 344.0], [30.1, 344.0], [30.2, 344.0], [30.3, 345.0], [30.4, 345.0], [30.5, 346.0], [30.6, 346.0], [30.7, 346.0], [30.8, 346.0], [30.9, 346.0], [31.0, 346.0], [31.1, 346.0], [31.2, 346.0], [31.3, 347.0], [31.4, 347.0], [31.5, 347.0], [31.6, 347.0], [31.7, 347.0], [31.8, 347.0], [31.9, 347.0], [32.0, 347.0], [32.1, 347.0], [32.2, 347.0], [32.3, 348.0], [32.4, 348.0], [32.5, 348.0], [32.6, 348.0], [32.7, 348.0], [32.8, 348.0], [32.9, 348.0], [33.0, 349.0], [33.1, 349.0], [33.2, 349.0], [33.3, 349.0], [33.4, 349.0], [33.5, 350.0], [33.6, 350.0], [33.7, 350.0], [33.8, 350.0], [33.9, 350.0], [34.0, 350.0], [34.1, 350.0], [34.2, 350.0], [34.3, 350.0], [34.4, 350.0], [34.5, 350.0], [34.6, 350.0], [34.7, 350.0], [34.8, 350.0], [34.9, 350.0], [35.0, 351.0], [35.1, 351.0], [35.2, 351.0], [35.3, 351.0], [35.4, 351.0], [35.5, 352.0], [35.6, 352.0], [35.7, 352.0], [35.8, 352.0], [35.9, 352.0], [36.0, 352.0], [36.1, 352.0], [36.2, 352.0], [36.3, 352.0], [36.4, 352.0], [36.5, 352.0], [36.6, 352.0], [36.7, 352.0], [36.8, 352.0], [36.9, 352.0], [37.0, 353.0], [37.1, 353.0], [37.2, 353.0], [37.3, 353.0], [37.4, 353.0], [37.5, 354.0], [37.6, 354.0], [37.7, 354.0], [37.8, 355.0], [37.9, 355.0], [38.0, 355.0], [38.1, 355.0], [38.2, 355.0], [38.3, 355.0], [38.4, 355.0], [38.5, 355.0], [38.6, 355.0], [38.7, 355.0], [38.8, 355.0], [38.9, 355.0], [39.0, 355.0], [39.1, 355.0], [39.2, 355.0], [39.3, 356.0], [39.4, 356.0], [39.5, 356.0], [39.6, 356.0], [39.7, 356.0], [39.8, 356.0], [39.9, 356.0], [40.0, 356.0], [40.1, 356.0], [40.2, 356.0], [40.3, 356.0], [40.4, 356.0], [40.5, 356.0], [40.6, 356.0], [40.7, 356.0], [40.8, 356.0], [40.9, 356.0], [41.0, 356.0], [41.1, 356.0], [41.2, 356.0], [41.3, 357.0], [41.4, 357.0], [41.5, 357.0], [41.6, 357.0], [41.7, 357.0], [41.8, 357.0], [41.9, 357.0], [42.0, 357.0], [42.1, 357.0], [42.2, 357.0], [42.3, 357.0], [42.4, 357.0], [42.5, 357.0], [42.6, 357.0], [42.7, 357.0], [42.8, 358.0], [42.9, 358.0], [43.0, 358.0], [43.1, 358.0], [43.2, 358.0], [43.3, 358.0], [43.4, 358.0], [43.5, 358.0], [43.6, 358.0], [43.7, 358.0], [43.8, 359.0], [43.9, 359.0], [44.0, 359.0], [44.1, 359.0], [44.2, 359.0], [44.3, 359.0], [44.4, 359.0], [44.5, 359.0], [44.6, 359.0], [44.7, 359.0], [44.8, 359.0], [44.9, 359.0], [45.0, 359.0], [45.1, 359.0], [45.2, 359.0], [45.3, 360.0], [45.4, 360.0], [45.5, 360.0], [45.6, 360.0], [45.7, 360.0], [45.8, 361.0], [45.9, 361.0], [46.0, 361.0], [46.1, 361.0], [46.2, 361.0], [46.3, 362.0], [46.4, 362.0], [46.5, 362.0], [46.6, 362.0], [46.7, 362.0], [46.8, 362.0], [46.9, 362.0], [47.0, 363.0], [47.1, 363.0], [47.2, 363.0], [47.3, 363.0], [47.4, 363.0], [47.5, 363.0], [47.6, 363.0], [47.7, 363.0], [47.8, 363.0], [47.9, 363.0], [48.0, 364.0], [48.1, 364.0], [48.2, 364.0], [48.3, 366.0], [48.4, 366.0], [48.5, 366.0], [48.6, 366.0], [48.7, 366.0], [48.8, 366.0], [48.9, 366.0], [49.0, 368.0], [49.1, 368.0], [49.2, 368.0], [49.3, 368.0], [49.4, 368.0], [49.5, 368.0], [49.6, 368.0], [49.7, 368.0], [49.8, 368.0], [49.9, 368.0], [50.0, 370.0], [50.1, 370.0], [50.2, 370.0], [50.3, 370.0], [50.4, 370.0], [50.5, 370.0], [50.6, 370.0], [50.7, 370.0], [50.8, 372.0], [50.9, 372.0], [51.0, 372.0], [51.1, 372.0], [51.2, 372.0], [51.3, 373.0], [51.4, 373.0], [51.5, 373.0], [51.6, 373.0], [51.7, 373.0], [51.8, 373.0], [51.9, 373.0], [52.0, 374.0], [52.1, 374.0], [52.2, 374.0], [52.3, 375.0], [52.4, 375.0], [52.5, 375.0], [52.6, 375.0], [52.7, 375.0], [52.8, 375.0], [52.9, 375.0], [53.0, 376.0], [53.1, 376.0], [53.2, 376.0], [53.3, 377.0], [53.4, 377.0], [53.5, 377.0], [53.6, 377.0], [53.7, 377.0], [53.8, 378.0], [53.9, 378.0], [54.0, 378.0], [54.1, 378.0], [54.2, 378.0], [54.3, 378.0], [54.4, 378.0], [54.5, 378.0], [54.6, 378.0], [54.7, 378.0], [54.8, 378.0], [54.9, 378.0], [55.0, 378.0], [55.1, 378.0], [55.2, 378.0], [55.3, 381.0], [55.4, 381.0], [55.5, 383.0], [55.6, 383.0], [55.7, 383.0], [55.8, 384.0], [55.9, 384.0], [56.0, 385.0], [56.1, 385.0], [56.2, 385.0], [56.3, 385.0], [56.4, 385.0], [56.5, 385.0], [56.6, 385.0], [56.7, 385.0], [56.8, 386.0], [56.9, 386.0], [57.0, 386.0], [57.1, 386.0], [57.2, 386.0], [57.3, 387.0], [57.4, 387.0], [57.5, 388.0], [57.6, 388.0], [57.7, 388.0], [57.8, 388.0], [57.9, 388.0], [58.0, 388.0], [58.1, 388.0], [58.2, 388.0], [58.3, 390.0], [58.4, 390.0], [58.5, 395.0], [58.6, 395.0], [58.7, 395.0], [58.8, 396.0], [58.9, 396.0], [59.0, 396.0], [59.1, 396.0], [59.2, 396.0], [59.3, 397.0], [59.4, 397.0], [59.5, 398.0], [59.6, 398.0], [59.7, 398.0], [59.8, 399.0], [59.9, 399.0], [60.0, 399.0], [60.1, 399.0], [60.2, 399.0], [60.3, 399.0], [60.4, 399.0], [60.5, 400.0], [60.6, 400.0], [60.7, 400.0], [60.8, 401.0], [60.9, 401.0], [61.0, 402.0], [61.1, 402.0], [61.2, 402.0], [61.3, 403.0], [61.4, 403.0], [61.5, 404.0], [61.6, 404.0], [61.7, 404.0], [61.8, 406.0], [61.9, 406.0], [62.0, 408.0], [62.1, 408.0], [62.2, 408.0], [62.3, 409.0], [62.4, 409.0], [62.5, 409.0], [62.6, 409.0], [62.7, 409.0], [62.8, 410.0], [62.9, 410.0], [63.0, 411.0], [63.1, 411.0], [63.2, 411.0], [63.3, 412.0], [63.4, 412.0], [63.5, 414.0], [63.6, 414.0], [63.7, 414.0], [63.8, 415.0], [63.9, 415.0], [64.0, 417.0], [64.1, 417.0], [64.2, 417.0], [64.3, 418.0], [64.4, 418.0], [64.5, 418.0], [64.6, 418.0], [64.7, 418.0], [64.8, 419.0], [64.9, 419.0], [65.0, 420.0], [65.1, 420.0], [65.2, 420.0], [65.3, 420.0], [65.4, 420.0], [65.5, 420.0], [65.6, 420.0], [65.7, 420.0], [65.8, 420.0], [65.9, 420.0], [66.0, 422.0], [66.1, 422.0], [66.2, 422.0], [66.3, 422.0], [66.4, 422.0], [66.5, 424.0], [66.6, 424.0], [66.7, 424.0], [66.8, 424.0], [66.9, 424.0], [67.0, 425.0], [67.1, 425.0], [67.2, 425.0], [67.3, 425.0], [67.4, 425.0], [67.5, 426.0], [67.6, 426.0], [67.7, 426.0], [67.8, 426.0], [67.9, 426.0], [68.0, 426.0], [68.1, 426.0], [68.2, 426.0], [68.3, 428.0], [68.4, 428.0], [68.5, 428.0], [68.6, 428.0], [68.7, 428.0], [68.8, 429.0], [68.9, 429.0], [69.0, 429.0], [69.1, 429.0], [69.2, 429.0], [69.3, 430.0], [69.4, 430.0], [69.5, 431.0], [69.6, 431.0], [69.7, 431.0], [69.8, 431.0], [69.9, 431.0], [70.0, 432.0], [70.1, 432.0], [70.2, 432.0], [70.3, 432.0], [70.4, 432.0], [70.5, 432.0], [70.6, 432.0], [70.7, 432.0], [70.8, 433.0], [70.9, 433.0], [71.0, 433.0], [71.1, 433.0], [71.2, 433.0], [71.3, 434.0], [71.4, 434.0], [71.5, 434.0], [71.6, 434.0], [71.7, 434.0], [71.8, 436.0], [71.9, 436.0], [72.0, 437.0], [72.1, 437.0], [72.2, 437.0], [72.3, 438.0], [72.4, 438.0], [72.5, 439.0], [72.6, 439.0], [72.7, 439.0], [72.8, 440.0], [72.9, 440.0], [73.0, 441.0], [73.1, 441.0], [73.2, 441.0], [73.3, 443.0], [73.4, 443.0], [73.5, 443.0], [73.6, 443.0], [73.7, 443.0], [73.8, 444.0], [73.9, 444.0], [74.0, 444.0], [74.1, 444.0], [74.2, 444.0], [74.3, 446.0], [74.4, 446.0], [74.5, 447.0], [74.6, 447.0], [74.7, 447.0], [74.8, 448.0], [74.9, 448.0], [75.0, 448.0], [75.1, 448.0], [75.2, 448.0], [75.3, 449.0], [75.4, 449.0], [75.5, 449.0], [75.6, 449.0], [75.7, 449.0], [75.8, 454.0], [75.9, 454.0], [76.0, 455.0], [76.1, 455.0], [76.2, 455.0], [76.3, 458.0], [76.4, 458.0], [76.5, 459.0], [76.6, 459.0], [76.7, 459.0], [76.8, 459.0], [76.9, 459.0], [77.0, 461.0], [77.1, 461.0], [77.2, 461.0], [77.3, 462.0], [77.4, 462.0], [77.5, 462.0], [77.6, 462.0], [77.7, 462.0], [77.8, 462.0], [77.9, 462.0], [78.0, 465.0], [78.1, 465.0], [78.2, 465.0], [78.3, 467.0], [78.4, 467.0], [78.5, 470.0], [78.6, 470.0], [78.7, 470.0], [78.8, 471.0], [78.9, 471.0], [79.0, 471.0], [79.1, 471.0], [79.2, 471.0], [79.3, 472.0], [79.4, 472.0], [79.5, 472.0], [79.6, 472.0], [79.7, 472.0], [79.8, 473.0], [79.9, 473.0], [80.0, 476.0], [80.1, 476.0], [80.2, 476.0], [80.3, 477.0], [80.4, 477.0], [80.5, 478.0], [80.6, 478.0], [80.7, 478.0], [80.8, 478.0], [80.9, 478.0], [81.0, 479.0], [81.1, 479.0], [81.2, 479.0], [81.3, 479.0], [81.4, 479.0], [81.5, 479.0], [81.6, 479.0], [81.7, 479.0], [81.8, 479.0], [81.9, 479.0], [82.0, 479.0], [82.1, 479.0], [82.2, 479.0], [82.3, 481.0], [82.4, 481.0], [82.5, 482.0], [82.6, 482.0], [82.7, 482.0], [82.8, 483.0], [82.9, 483.0], [83.0, 484.0], [83.1, 484.0], [83.2, 484.0], [83.3, 484.0], [83.4, 484.0], [83.5, 484.0], [83.6, 484.0], [83.7, 484.0], [83.8, 485.0], [83.9, 485.0], [84.0, 487.0], [84.1, 487.0], [84.2, 487.0], [84.3, 488.0], [84.4, 488.0], [84.5, 492.0], [84.6, 492.0], [84.7, 492.0], [84.8, 493.0], [84.9, 493.0], [85.0, 494.0], [85.1, 494.0], [85.2, 494.0], [85.3, 495.0], [85.4, 495.0], [85.5, 495.0], [85.6, 495.0], [85.7, 495.0], [85.8, 497.0], [85.9, 497.0], [86.0, 498.0], [86.1, 498.0], [86.2, 498.0], [86.3, 498.0], [86.4, 498.0], [86.5, 500.0], [86.6, 500.0], [86.7, 500.0], [86.8, 503.0], [86.9, 503.0], [87.0, 505.0], [87.1, 505.0], [87.2, 505.0], [87.3, 505.0], [87.4, 505.0], [87.5, 508.0], [87.6, 508.0], [87.7, 508.0], [87.8, 508.0], [87.9, 508.0], [88.0, 509.0], [88.1, 509.0], [88.2, 509.0], [88.3, 510.0], [88.4, 510.0], [88.5, 511.0], [88.6, 511.0], [88.7, 511.0], [88.8, 517.0], [88.9, 517.0], [89.0, 522.0], [89.1, 522.0], [89.2, 522.0], [89.3, 524.0], [89.4, 524.0], [89.5, 524.0], [89.6, 524.0], [89.7, 524.0], [89.8, 526.0], [89.9, 526.0], [90.0, 529.0], [90.1, 529.0], [90.2, 529.0], [90.3, 531.0], [90.4, 531.0], [90.5, 535.0], [90.6, 535.0], [90.7, 535.0], [90.8, 535.0], [90.9, 535.0], [91.0, 539.0], [91.1, 539.0], [91.2, 539.0], [91.3, 549.0], [91.4, 549.0], [91.5, 557.0], [91.6, 557.0], [91.7, 557.0], [91.8, 557.0], [91.9, 557.0], [92.0, 558.0], [92.1, 558.0], [92.2, 558.0], [92.3, 562.0], [92.4, 562.0], [92.5, 567.0], [92.6, 567.0], [92.7, 567.0], [92.8, 574.0], [92.9, 574.0], [93.0, 606.0], [93.1, 606.0], [93.2, 606.0], [93.3, 621.0], [93.4, 621.0], [93.5, 634.0], [93.6, 634.0], [93.7, 634.0], [93.8, 643.0], [93.9, 643.0], [94.0, 645.0], [94.1, 645.0], [94.2, 645.0], [94.3, 671.0], [94.4, 671.0], [94.5, 676.0], [94.6, 676.0], [94.7, 676.0], [94.8, 719.0], [94.9, 719.0], [95.0, 758.0], [95.1, 758.0], [95.2, 758.0], [95.3, 768.0], [95.4, 768.0], [95.5, 808.0], [95.6, 808.0], [95.7, 808.0], [95.8, 815.0], [95.9, 815.0], [96.0, 816.0], [96.1, 816.0], [96.2, 816.0], [96.3, 817.0], [96.4, 817.0], [96.5, 832.0], [96.6, 832.0], [96.7, 832.0], [96.8, 838.0], [96.9, 838.0], [97.0, 839.0], [97.1, 839.0], [97.2, 839.0], [97.3, 862.0], [97.4, 862.0], [97.5, 891.0], [97.6, 891.0], [97.7, 891.0], [97.8, 1168.0], [97.9, 1168.0], [98.0, 1174.0], [98.1, 1174.0], [98.2, 1174.0], [98.3, 1175.0], [98.4, 1175.0], [98.5, 1258.0], [98.6, 1258.0], [98.7, 1258.0], [98.8, 1272.0], [98.9, 1272.0], [99.0, 1286.0], [99.1, 1286.0], [99.2, 1286.0], [99.3, 1291.0], [99.4, 1291.0], [99.5, 1305.0], [99.6, 1305.0], [99.7, 1305.0], [99.8, 1441.0], [99.9, 1441.0]], "isOverall": false, "label": "updateBooking", "isController": false}, {"data": [[0.0, 1253.0], [0.1, 1253.0], [0.2, 1253.0], [0.3, 1261.0], [0.4, 1261.0], [0.5, 1267.0], [0.6, 1267.0], [0.7, 1267.0], [0.8, 1275.0], [0.9, 1275.0], [1.0, 1280.0], [1.1, 1280.0], [1.2, 1280.0], [1.3, 1291.0], [1.4, 1291.0], [1.5, 1294.0], [1.6, 1294.0], [1.7, 1294.0], [1.8, 1295.0], [1.9, 1295.0], [2.0, 1310.0], [2.1, 1310.0], [2.2, 1310.0], [2.3, 1311.0], [2.4, 1311.0], [2.5, 1314.0], [2.6, 1314.0], [2.7, 1314.0], [2.8, 1314.0], [2.9, 1314.0], [3.0, 1322.0], [3.1, 1322.0], [3.2, 1322.0], [3.3, 1324.0], [3.4, 1324.0], [3.5, 1325.0], [3.6, 1325.0], [3.7, 1325.0], [3.8, 1326.0], [3.9, 1326.0], [4.0, 1326.0], [4.1, 1326.0], [4.2, 1326.0], [4.3, 1327.0], [4.4, 1327.0], [4.5, 1328.0], [4.6, 1328.0], [4.7, 1328.0], [4.8, 1329.0], [4.9, 1329.0], [5.0, 1329.0], [5.1, 1329.0], [5.2, 1329.0], [5.3, 1333.0], [5.4, 1333.0], [5.5, 1336.0], [5.6, 1336.0], [5.7, 1336.0], [5.8, 1340.0], [5.9, 1340.0], [6.0, 1344.0], [6.1, 1344.0], [6.2, 1344.0], [6.3, 1345.0], [6.4, 1345.0], [6.5, 1348.0], [6.6, 1348.0], [6.7, 1348.0], [6.8, 1350.0], [6.9, 1350.0], [7.0, 1350.0], [7.1, 1350.0], [7.2, 1350.0], [7.3, 1351.0], [7.4, 1351.0], [7.5, 1352.0], [7.6, 1352.0], [7.7, 1352.0], [7.8, 1353.0], [7.9, 1353.0], [8.0, 1354.0], [8.1, 1354.0], [8.2, 1354.0], [8.3, 1354.0], [8.4, 1354.0], [8.5, 1355.0], [8.6, 1355.0], [8.7, 1355.0], [8.8, 1356.0], [8.9, 1356.0], [9.0, 1358.0], [9.1, 1358.0], [9.2, 1358.0], [9.3, 1359.0], [9.4, 1359.0], [9.5, 1359.0], [9.6, 1359.0], [9.7, 1359.0], [9.8, 1362.0], [9.9, 1362.0], [10.0, 1363.0], [10.1, 1363.0], [10.2, 1363.0], [10.3, 1365.0], [10.4, 1365.0], [10.5, 1366.0], [10.6, 1366.0], [10.7, 1366.0], [10.8, 1366.0], [10.9, 1366.0], [11.0, 1367.0], [11.1, 1367.0], [11.2, 1367.0], [11.3, 1368.0], [11.4, 1368.0], [11.5, 1368.0], [11.6, 1368.0], [11.7, 1368.0], [11.8, 1369.0], [11.9, 1369.0], [12.0, 1371.0], [12.1, 1371.0], [12.2, 1371.0], [12.3, 1372.0], [12.4, 1372.0], [12.5, 1372.0], [12.6, 1372.0], [12.7, 1372.0], [12.8, 1373.0], [12.9, 1373.0], [13.0, 1374.0], [13.1, 1374.0], [13.2, 1374.0], [13.3, 1375.0], [13.4, 1375.0], [13.5, 1375.0], [13.6, 1375.0], [13.7, 1375.0], [13.8, 1376.0], [13.9, 1376.0], [14.0, 1376.0], [14.1, 1376.0], [14.2, 1376.0], [14.3, 1377.0], [14.4, 1377.0], [14.5, 1378.0], [14.6, 1378.0], [14.7, 1378.0], [14.8, 1379.0], [14.9, 1379.0], [15.0, 1382.0], [15.1, 1382.0], [15.2, 1382.0], [15.3, 1383.0], [15.4, 1383.0], [15.5, 1383.0], [15.6, 1383.0], [15.7, 1383.0], [15.8, 1383.0], [15.9, 1383.0], [16.0, 1385.0], [16.1, 1385.0], [16.2, 1385.0], [16.3, 1385.0], [16.4, 1385.0], [16.5, 1386.0], [16.6, 1386.0], [16.7, 1386.0], [16.8, 1386.0], [16.9, 1386.0], [17.0, 1387.0], [17.1, 1387.0], [17.2, 1387.0], [17.3, 1388.0], [17.4, 1388.0], [17.5, 1389.0], [17.6, 1389.0], [17.7, 1389.0], [17.8, 1389.0], [17.9, 1389.0], [18.0, 1390.0], [18.1, 1390.0], [18.2, 1390.0], [18.3, 1391.0], [18.4, 1391.0], [18.5, 1392.0], [18.6, 1392.0], [18.7, 1392.0], [18.8, 1393.0], [18.9, 1393.0], [19.0, 1395.0], [19.1, 1395.0], [19.2, 1395.0], [19.3, 1397.0], [19.4, 1397.0], [19.5, 1401.0], [19.6, 1401.0], [19.7, 1401.0], [19.8, 1401.0], [19.9, 1401.0], [20.0, 1402.0], [20.1, 1402.0], [20.2, 1402.0], [20.3, 1403.0], [20.4, 1403.0], [20.5, 1405.0], [20.6, 1405.0], [20.7, 1405.0], [20.8, 1408.0], [20.9, 1408.0], [21.0, 1409.0], [21.1, 1409.0], [21.2, 1409.0], [21.3, 1409.0], [21.4, 1409.0], [21.5, 1412.0], [21.6, 1412.0], [21.7, 1412.0], [21.8, 1412.0], [21.9, 1412.0], [22.0, 1413.0], [22.1, 1413.0], [22.2, 1413.0], [22.3, 1414.0], [22.4, 1414.0], [22.5, 1416.0], [22.6, 1416.0], [22.7, 1416.0], [22.8, 1417.0], [22.9, 1417.0], [23.0, 1417.0], [23.1, 1417.0], [23.2, 1417.0], [23.3, 1419.0], [23.4, 1419.0], [23.5, 1419.0], [23.6, 1419.0], [23.7, 1419.0], [23.8, 1420.0], [23.9, 1420.0], [24.0, 1422.0], [24.1, 1422.0], [24.2, 1422.0], [24.3, 1422.0], [24.4, 1422.0], [24.5, 1422.0], [24.6, 1422.0], [24.7, 1422.0], [24.8, 1423.0], [24.9, 1423.0], [25.0, 1423.0], [25.1, 1423.0], [25.2, 1423.0], [25.3, 1424.0], [25.4, 1424.0], [25.5, 1425.0], [25.6, 1425.0], [25.7, 1425.0], [25.8, 1426.0], [25.9, 1426.0], [26.0, 1427.0], [26.1, 1427.0], [26.2, 1427.0], [26.3, 1428.0], [26.4, 1428.0], [26.5, 1428.0], [26.6, 1428.0], [26.7, 1428.0], [26.8, 1428.0], [26.9, 1428.0], [27.0, 1429.0], [27.1, 1429.0], [27.2, 1429.0], [27.3, 1431.0], [27.4, 1431.0], [27.5, 1436.0], [27.6, 1436.0], [27.7, 1436.0], [27.8, 1436.0], [27.9, 1436.0], [28.0, 1440.0], [28.1, 1440.0], [28.2, 1440.0], [28.3, 1441.0], [28.4, 1441.0], [28.5, 1441.0], [28.6, 1441.0], [28.7, 1441.0], [28.8, 1441.0], [28.9, 1441.0], [29.0, 1444.0], [29.1, 1444.0], [29.2, 1444.0], [29.3, 1445.0], [29.4, 1445.0], [29.5, 1449.0], [29.6, 1449.0], [29.7, 1449.0], [29.8, 1451.0], [29.9, 1451.0], [30.0, 1451.0], [30.1, 1451.0], [30.2, 1451.0], [30.3, 1453.0], [30.4, 1453.0], [30.5, 1454.0], [30.6, 1454.0], [30.7, 1454.0], [30.8, 1454.0], [30.9, 1454.0], [31.0, 1454.0], [31.1, 1454.0], [31.2, 1454.0], [31.3, 1455.0], [31.4, 1455.0], [31.5, 1456.0], [31.6, 1456.0], [31.7, 1456.0], [31.8, 1456.0], [31.9, 1456.0], [32.0, 1459.0], [32.1, 1459.0], [32.2, 1459.0], [32.3, 1460.0], [32.4, 1460.0], [32.5, 1460.0], [32.6, 1460.0], [32.7, 1460.0], [32.8, 1464.0], [32.9, 1464.0], [33.0, 1464.0], [33.1, 1464.0], [33.2, 1464.0], [33.3, 1465.0], [33.4, 1465.0], [33.5, 1469.0], [33.6, 1469.0], [33.7, 1469.0], [33.8, 1470.0], [33.9, 1470.0], [34.0, 1476.0], [34.1, 1476.0], [34.2, 1476.0], [34.3, 1479.0], [34.4, 1479.0], [34.5, 1479.0], [34.6, 1479.0], [34.7, 1479.0], [34.8, 1480.0], [34.9, 1480.0], [35.0, 1481.0], [35.1, 1481.0], [35.2, 1481.0], [35.3, 1482.0], [35.4, 1482.0], [35.5, 1483.0], [35.6, 1483.0], [35.7, 1483.0], [35.8, 1483.0], [35.9, 1483.0], [36.0, 1484.0], [36.1, 1484.0], [36.2, 1484.0], [36.3, 1484.0], [36.4, 1484.0], [36.5, 1486.0], [36.6, 1486.0], [36.7, 1486.0], [36.8, 1486.0], [36.9, 1486.0], [37.0, 1487.0], [37.1, 1487.0], [37.2, 1487.0], [37.3, 1489.0], [37.4, 1489.0], [37.5, 1494.0], [37.6, 1494.0], [37.7, 1494.0], [37.8, 1495.0], [37.9, 1495.0], [38.0, 1497.0], [38.1, 1497.0], [38.2, 1497.0], [38.3, 1497.0], [38.4, 1497.0], [38.5, 1497.0], [38.6, 1497.0], [38.7, 1497.0], [38.8, 1501.0], [38.9, 1501.0], [39.0, 1501.0], [39.1, 1501.0], [39.2, 1501.0], [39.3, 1502.0], [39.4, 1502.0], [39.5, 1507.0], [39.6, 1507.0], [39.7, 1507.0], [39.8, 1509.0], [39.9, 1509.0], [40.0, 1510.0], [40.1, 1510.0], [40.2, 1510.0], [40.3, 1514.0], [40.4, 1514.0], [40.5, 1515.0], [40.6, 1515.0], [40.7, 1515.0], [40.8, 1515.0], [40.9, 1515.0], [41.0, 1516.0], [41.1, 1516.0], [41.2, 1516.0], [41.3, 1517.0], [41.4, 1517.0], [41.5, 1518.0], [41.6, 1518.0], [41.7, 1518.0], [41.8, 1519.0], [41.9, 1519.0], [42.0, 1520.0], [42.1, 1520.0], [42.2, 1520.0], [42.3, 1523.0], [42.4, 1523.0], [42.5, 1524.0], [42.6, 1524.0], [42.7, 1524.0], [42.8, 1524.0], [42.9, 1524.0], [43.0, 1525.0], [43.1, 1525.0], [43.2, 1525.0], [43.3, 1527.0], [43.4, 1527.0], [43.5, 1529.0], [43.6, 1529.0], [43.7, 1529.0], [43.8, 1530.0], [43.9, 1530.0], [44.0, 1533.0], [44.1, 1533.0], [44.2, 1533.0], [44.3, 1537.0], [44.4, 1537.0], [44.5, 1537.0], [44.6, 1537.0], [44.7, 1537.0], [44.8, 1537.0], [44.9, 1537.0], [45.0, 1538.0], [45.1, 1538.0], [45.2, 1538.0], [45.3, 1538.0], [45.4, 1538.0], [45.5, 1539.0], [45.6, 1539.0], [45.7, 1539.0], [45.8, 1541.0], [45.9, 1541.0], [46.0, 1541.0], [46.1, 1541.0], [46.2, 1541.0], [46.3, 1544.0], [46.4, 1544.0], [46.5, 1545.0], [46.6, 1545.0], [46.7, 1545.0], [46.8, 1546.0], [46.9, 1546.0], [47.0, 1546.0], [47.1, 1546.0], [47.2, 1546.0], [47.3, 1547.0], [47.4, 1547.0], [47.5, 1550.0], [47.6, 1550.0], [47.7, 1550.0], [47.8, 1552.0], [47.9, 1552.0], [48.0, 1552.0], [48.1, 1552.0], [48.2, 1552.0], [48.3, 1557.0], [48.4, 1557.0], [48.5, 1560.0], [48.6, 1560.0], [48.7, 1560.0], [48.8, 1561.0], [48.9, 1561.0], [49.0, 1565.0], [49.1, 1565.0], [49.2, 1565.0], [49.3, 1566.0], [49.4, 1566.0], [49.5, 1566.0], [49.6, 1566.0], [49.7, 1566.0], [49.8, 1567.0], [49.9, 1567.0], [50.0, 1568.0], [50.1, 1568.0], [50.2, 1568.0], [50.3, 1572.0], [50.4, 1572.0], [50.5, 1573.0], [50.6, 1573.0], [50.7, 1573.0], [50.8, 1577.0], [50.9, 1577.0], [51.0, 1578.0], [51.1, 1578.0], [51.2, 1578.0], [51.3, 1579.0], [51.4, 1579.0], [51.5, 1579.0], [51.6, 1579.0], [51.7, 1579.0], [51.8, 1580.0], [51.9, 1580.0], [52.0, 1582.0], [52.1, 1582.0], [52.2, 1582.0], [52.3, 1583.0], [52.4, 1583.0], [52.5, 1584.0], [52.6, 1584.0], [52.7, 1584.0], [52.8, 1585.0], [52.9, 1585.0], [53.0, 1587.0], [53.1, 1587.0], [53.2, 1587.0], [53.3, 1590.0], [53.4, 1590.0], [53.5, 1591.0], [53.6, 1591.0], [53.7, 1591.0], [53.8, 1592.0], [53.9, 1592.0], [54.0, 1593.0], [54.1, 1593.0], [54.2, 1593.0], [54.3, 1593.0], [54.4, 1593.0], [54.5, 1594.0], [54.6, 1594.0], [54.7, 1594.0], [54.8, 1597.0], [54.9, 1597.0], [55.0, 1600.0], [55.1, 1600.0], [55.2, 1600.0], [55.3, 1602.0], [55.4, 1602.0], [55.5, 1605.0], [55.6, 1605.0], [55.7, 1605.0], [55.8, 1608.0], [55.9, 1608.0], [56.0, 1609.0], [56.1, 1609.0], [56.2, 1609.0], [56.3, 1610.0], [56.4, 1610.0], [56.5, 1615.0], [56.6, 1615.0], [56.7, 1615.0], [56.8, 1618.0], [56.9, 1618.0], [57.0, 1627.0], [57.1, 1627.0], [57.2, 1627.0], [57.3, 1627.0], [57.4, 1627.0], [57.5, 1630.0], [57.6, 1630.0], [57.7, 1630.0], [57.8, 1633.0], [57.9, 1633.0], [58.0, 1633.0], [58.1, 1633.0], [58.2, 1633.0], [58.3, 1634.0], [58.4, 1634.0], [58.5, 1634.0], [58.6, 1634.0], [58.7, 1634.0], [58.8, 1634.0], [58.9, 1634.0], [59.0, 1638.0], [59.1, 1638.0], [59.2, 1638.0], [59.3, 1639.0], [59.4, 1639.0], [59.5, 1641.0], [59.6, 1641.0], [59.7, 1641.0], [59.8, 1642.0], [59.9, 1642.0], [60.0, 1642.0], [60.1, 1642.0], [60.2, 1642.0], [60.3, 1643.0], [60.4, 1643.0], [60.5, 1645.0], [60.6, 1645.0], [60.7, 1645.0], [60.8, 1649.0], [60.9, 1649.0], [61.0, 1651.0], [61.1, 1651.0], [61.2, 1651.0], [61.3, 1652.0], [61.4, 1652.0], [61.5, 1653.0], [61.6, 1653.0], [61.7, 1653.0], [61.8, 1655.0], [61.9, 1655.0], [62.0, 1661.0], [62.1, 1661.0], [62.2, 1661.0], [62.3, 1669.0], [62.4, 1669.0], [62.5, 1680.0], [62.6, 1680.0], [62.7, 1680.0], [62.8, 1684.0], [62.9, 1684.0], [63.0, 1687.0], [63.1, 1687.0], [63.2, 1687.0], [63.3, 1693.0], [63.4, 1693.0], [63.5, 1696.0], [63.6, 1696.0], [63.7, 1696.0], [63.8, 1704.0], [63.9, 1704.0], [64.0, 1709.0], [64.1, 1709.0], [64.2, 1709.0], [64.3, 1711.0], [64.4, 1711.0], [64.5, 1714.0], [64.6, 1714.0], [64.7, 1714.0], [64.8, 1715.0], [64.9, 1715.0], [65.0, 1716.0], [65.1, 1716.0], [65.2, 1716.0], [65.3, 1725.0], [65.4, 1725.0], [65.5, 1728.0], [65.6, 1728.0], [65.7, 1728.0], [65.8, 1731.0], [65.9, 1731.0], [66.0, 1732.0], [66.1, 1732.0], [66.2, 1732.0], [66.3, 1733.0], [66.4, 1733.0], [66.5, 1752.0], [66.6, 1752.0], [66.7, 1752.0], [66.8, 1759.0], [66.9, 1759.0], [67.0, 2019.0], [67.1, 2019.0], [67.2, 2019.0], [67.3, 2051.0], [67.4, 2051.0], [67.5, 2062.0], [67.6, 2062.0], [67.7, 2062.0], [67.8, 2096.0], [67.9, 2096.0], [68.0, 2099.0], [68.1, 2099.0], [68.2, 2099.0], [68.3, 2103.0], [68.4, 2103.0], [68.5, 2141.0], [68.6, 2141.0], [68.7, 2141.0], [68.8, 2145.0], [68.9, 2145.0], [69.0, 2176.0], [69.1, 2176.0], [69.2, 2176.0], [69.3, 2204.0], [69.4, 2204.0], [69.5, 2257.0], [69.6, 2257.0], [69.7, 2257.0], [69.8, 2259.0], [69.9, 2259.0], [70.0, 2273.0], [70.1, 2273.0], [70.2, 2273.0], [70.3, 2279.0], [70.4, 2279.0], [70.5, 2287.0], [70.6, 2287.0], [70.7, 2287.0], [70.8, 2291.0], [70.9, 2291.0], [71.0, 2323.0], [71.1, 2323.0], [71.2, 2323.0], [71.3, 2333.0], [71.4, 2333.0], [71.5, 2355.0], [71.6, 2355.0], [71.7, 2355.0], [71.8, 2357.0], [71.9, 2357.0], [72.0, 2357.0], [72.1, 2357.0], [72.2, 2357.0], [72.3, 2358.0], [72.4, 2358.0], [72.5, 2359.0], [72.6, 2359.0], [72.7, 2359.0], [72.8, 2361.0], [72.9, 2361.0], [73.0, 2362.0], [73.1, 2362.0], [73.2, 2362.0], [73.3, 2364.0], [73.4, 2364.0], [73.5, 2366.0], [73.6, 2366.0], [73.7, 2366.0], [73.8, 2371.0], [73.9, 2371.0], [74.0, 2371.0], [74.1, 2371.0], [74.2, 2371.0], [74.3, 2378.0], [74.4, 2378.0], [74.5, 2380.0], [74.6, 2380.0], [74.7, 2380.0], [74.8, 2381.0], [74.9, 2381.0], [75.0, 2386.0], [75.1, 2386.0], [75.2, 2386.0], [75.3, 2388.0], [75.4, 2388.0], [75.5, 2390.0], [75.6, 2390.0], [75.7, 2390.0], [75.8, 2399.0], [75.9, 2399.0], [76.0, 2409.0], [76.1, 2409.0], [76.2, 2409.0], [76.3, 2411.0], [76.4, 2411.0], [76.5, 2416.0], [76.6, 2416.0], [76.7, 2416.0], [76.8, 2447.0], [76.9, 2447.0], [77.0, 2455.0], [77.1, 2455.0], [77.2, 2455.0], [77.3, 2459.0], [77.4, 2459.0], [77.5, 2462.0], [77.6, 2462.0], [77.7, 2462.0], [77.8, 2479.0], [77.9, 2479.0], [78.0, 2485.0], [78.1, 2485.0], [78.2, 2485.0], [78.3, 2502.0], [78.4, 2502.0], [78.5, 2510.0], [78.6, 2510.0], [78.7, 2510.0], [78.8, 2522.0], [78.9, 2522.0], [79.0, 2539.0], [79.1, 2539.0], [79.2, 2539.0], [79.3, 2541.0], [79.4, 2541.0], [79.5, 2560.0], [79.6, 2560.0], [79.7, 2560.0], [79.8, 2571.0], [79.9, 2571.0], [80.0, 2586.0], [80.1, 2586.0], [80.2, 2586.0], [80.3, 2589.0], [80.4, 2589.0], [80.5, 2599.0], [80.6, 2599.0], [80.7, 2599.0], [80.8, 2602.0], [80.9, 2602.0], [81.0, 2608.0], [81.1, 2608.0], [81.2, 2608.0], [81.3, 2613.0], [81.4, 2613.0], [81.5, 2616.0], [81.6, 2616.0], [81.7, 2616.0], [81.8, 2618.0], [81.9, 2618.0], [82.0, 2625.0], [82.1, 2625.0], [82.2, 2625.0], [82.3, 2634.0], [82.4, 2634.0], [82.5, 2647.0], [82.6, 2647.0], [82.7, 2647.0], [82.8, 2658.0], [82.9, 2658.0], [83.0, 2667.0], [83.1, 2667.0], [83.2, 2667.0], [83.3, 2691.0], [83.4, 2691.0], [83.5, 2715.0], [83.6, 2715.0], [83.7, 2715.0], [83.8, 2722.0], [83.9, 2722.0], [84.0, 2734.0], [84.1, 2734.0], [84.2, 2734.0], [84.3, 2740.0], [84.4, 2740.0], [84.5, 2743.0], [84.6, 2743.0], [84.7, 2743.0], [84.8, 2745.0], [84.9, 2745.0], [85.0, 2748.0], [85.1, 2748.0], [85.2, 2748.0], [85.3, 2752.0], [85.4, 2752.0], [85.5, 2756.0], [85.6, 2756.0], [85.7, 2756.0], [85.8, 2766.0], [85.9, 2766.0], [86.0, 2773.0], [86.1, 2773.0], [86.2, 2773.0], [86.3, 2798.0], [86.4, 2798.0], [86.5, 2814.0], [86.6, 2814.0], [86.7, 2814.0], [86.8, 2825.0], [86.9, 2825.0], [87.0, 2832.0], [87.1, 2832.0], [87.2, 2832.0], [87.3, 2834.0], [87.4, 2834.0], [87.5, 2868.0], [87.6, 2868.0], [87.7, 2868.0], [87.8, 2910.0], [87.9, 2910.0], [88.0, 2911.0], [88.1, 2911.0], [88.2, 2911.0], [88.3, 2920.0], [88.4, 2920.0], [88.5, 2936.0], [88.6, 2936.0], [88.7, 2936.0], [88.8, 2942.0], [88.9, 2942.0], [89.0, 2951.0], [89.1, 2951.0], [89.2, 2951.0], [89.3, 2957.0], [89.4, 2957.0], [89.5, 2985.0], [89.6, 2985.0], [89.7, 2985.0], [89.8, 3069.0], [89.9, 3069.0], [90.0, 3145.0], [90.1, 3145.0], [90.2, 3145.0], [90.3, 3197.0], [90.4, 3197.0], [90.5, 3212.0], [90.6, 3212.0], [90.7, 3212.0], [90.8, 3265.0], [90.9, 3265.0], [91.0, 3289.0], [91.1, 3289.0], [91.2, 3289.0], [91.3, 3289.0], [91.4, 3289.0], [91.5, 3321.0], [91.6, 3321.0], [91.7, 3321.0], [91.8, 3334.0], [91.9, 3334.0], [92.0, 3339.0], [92.1, 3339.0], [92.2, 3339.0], [92.3, 3342.0], [92.4, 3342.0], [92.5, 3344.0], [92.6, 3344.0], [92.7, 3344.0], [92.8, 3374.0], [92.9, 3374.0], [93.0, 3407.0], [93.1, 3407.0], [93.2, 3407.0], [93.3, 3421.0], [93.4, 3421.0], [93.5, 3427.0], [93.6, 3427.0], [93.7, 3427.0], [93.8, 3437.0], [93.9, 3437.0], [94.0, 3473.0], [94.1, 3473.0], [94.2, 3473.0], [94.3, 3484.0], [94.4, 3484.0], [94.5, 3509.0], [94.6, 3509.0], [94.7, 3509.0], [94.8, 3707.0], [94.9, 3707.0], [95.0, 3739.0], [95.1, 3739.0], [95.2, 3739.0], [95.3, 3776.0], [95.4, 3776.0], [95.5, 3956.0], [95.6, 3956.0], [95.7, 3956.0], [95.8, 3968.0], [95.9, 3968.0], [96.0, 3984.0], [96.1, 3984.0], [96.2, 3984.0], [96.3, 3987.0], [96.4, 3987.0], [96.5, 4064.0], [96.6, 4064.0], [96.7, 4064.0], [96.8, 4175.0], [96.9, 4175.0], [97.0, 4196.0], [97.1, 4196.0], [97.2, 4196.0], [97.3, 4280.0], [97.4, 4280.0], [97.5, 4312.0], [97.6, 4312.0], [97.7, 4312.0], [97.8, 4485.0], [97.9, 4485.0], [98.0, 4528.0], [98.1, 4528.0], [98.2, 4528.0], [98.3, 4686.0], [98.4, 4686.0], [98.5, 4775.0], [98.6, 4775.0], [98.7, 4775.0], [98.8, 4827.0], [98.9, 4827.0], [99.0, 5030.0], [99.1, 5030.0], [99.2, 5030.0], [99.3, 5206.0], [99.4, 5206.0], [99.5, 5480.0], [99.6, 5480.0], [99.7, 5480.0], [99.8, 6428.0], [99.9, 6428.0]], "isOverall": false, "label": "auth", "isController": false}, {"data": [[0.0, 300.0], [0.1, 300.0], [0.2, 301.0], [0.3, 302.0], [0.4, 302.0], [0.5, 302.0], [0.6, 302.0], [0.7, 302.0], [0.8, 303.0], [0.9, 303.0], [1.0, 303.0], [1.1, 303.0], [1.2, 303.0], [1.3, 304.0], [1.4, 304.0], [1.5, 304.0], [1.6, 304.0], [1.7, 304.0], [1.8, 304.0], [1.9, 304.0], [2.0, 304.0], [2.1, 304.0], [2.2, 304.0], [2.3, 304.0], [2.4, 304.0], [2.5, 305.0], [2.6, 305.0], [2.7, 305.0], [2.8, 305.0], [2.9, 305.0], [3.0, 305.0], [3.1, 305.0], [3.2, 305.0], [3.3, 306.0], [3.4, 306.0], [3.5, 306.0], [3.6, 306.0], [3.7, 306.0], [3.8, 306.0], [3.9, 306.0], [4.0, 306.0], [4.1, 306.0], [4.2, 307.0], [4.3, 307.0], [4.4, 307.0], [4.5, 307.0], [4.6, 307.0], [4.7, 307.0], [4.8, 307.0], [4.9, 307.0], [5.0, 307.0], [5.1, 307.0], [5.2, 308.0], [5.3, 308.0], [5.4, 308.0], [5.5, 308.0], [5.6, 308.0], [5.7, 308.0], [5.8, 308.0], [5.9, 309.0], [6.0, 309.0], [6.1, 309.0], [6.2, 309.0], [6.3, 309.0], [6.4, 309.0], [6.5, 309.0], [6.6, 309.0], [6.7, 309.0], [6.8, 309.0], [6.9, 310.0], [7.0, 310.0], [7.1, 310.0], [7.2, 310.0], [7.3, 310.0], [7.4, 310.0], [7.5, 310.0], [7.6, 310.0], [7.7, 311.0], [7.8, 311.0], [7.9, 311.0], [8.0, 311.0], [8.1, 311.0], [8.2, 311.0], [8.3, 311.0], [8.4, 311.0], [8.5, 312.0], [8.6, 312.0], [8.7, 312.0], [8.8, 312.0], [8.9, 313.0], [9.0, 313.0], [9.1, 313.0], [9.2, 313.0], [9.3, 313.0], [9.4, 313.0], [9.5, 313.0], [9.6, 313.0], [9.7, 313.0], [9.8, 313.0], [9.9, 314.0], [10.0, 314.0], [10.1, 314.0], [10.2, 314.0], [10.3, 314.0], [10.4, 314.0], [10.5, 314.0], [10.6, 314.0], [10.7, 314.0], [10.8, 315.0], [10.9, 315.0], [11.0, 315.0], [11.1, 315.0], [11.2, 315.0], [11.3, 315.0], [11.4, 315.0], [11.5, 315.0], [11.6, 315.0], [11.7, 315.0], [11.8, 315.0], [11.9, 315.0], [12.0, 316.0], [12.1, 316.0], [12.2, 316.0], [12.3, 316.0], [12.4, 316.0], [12.5, 316.0], [12.6, 316.0], [12.7, 316.0], [12.8, 316.0], [12.9, 316.0], [13.0, 316.0], [13.1, 316.0], [13.2, 316.0], [13.3, 317.0], [13.4, 317.0], [13.5, 317.0], [13.6, 317.0], [13.7, 317.0], [13.8, 317.0], [13.9, 317.0], [14.0, 317.0], [14.1, 317.0], [14.2, 317.0], [14.3, 317.0], [14.4, 317.0], [14.5, 317.0], [14.6, 317.0], [14.7, 317.0], [14.8, 318.0], [14.9, 318.0], [15.0, 318.0], [15.1, 318.0], [15.2, 318.0], [15.3, 318.0], [15.4, 318.0], [15.5, 318.0], [15.6, 318.0], [15.7, 318.0], [15.8, 318.0], [15.9, 318.0], [16.0, 318.0], [16.1, 318.0], [16.2, 318.0], [16.3, 318.0], [16.4, 318.0], [16.5, 318.0], [16.6, 318.0], [16.7, 318.0], [16.8, 318.0], [16.9, 319.0], [17.0, 319.0], [17.1, 319.0], [17.2, 319.0], [17.3, 319.0], [17.4, 319.0], [17.5, 319.0], [17.6, 319.0], [17.7, 319.0], [17.8, 319.0], [17.9, 319.0], [18.0, 319.0], [18.1, 319.0], [18.2, 320.0], [18.3, 320.0], [18.4, 320.0], [18.5, 320.0], [18.6, 320.0], [18.7, 320.0], [18.8, 320.0], [18.9, 320.0], [19.0, 320.0], [19.1, 320.0], [19.2, 320.0], [19.3, 320.0], [19.4, 321.0], [19.5, 321.0], [19.6, 321.0], [19.7, 321.0], [19.8, 321.0], [19.9, 321.0], [20.0, 321.0], [20.1, 321.0], [20.2, 321.0], [20.3, 321.0], [20.4, 321.0], [20.5, 321.0], [20.6, 321.0], [20.7, 321.0], [20.8, 321.0], [20.9, 322.0], [21.0, 322.0], [21.1, 322.0], [21.2, 322.0], [21.3, 322.0], [21.4, 322.0], [21.5, 322.0], [21.6, 322.0], [21.7, 322.0], [21.8, 322.0], [21.9, 322.0], [22.0, 323.0], [22.1, 323.0], [22.2, 323.0], [22.3, 323.0], [22.4, 323.0], [22.5, 323.0], [22.6, 323.0], [22.7, 323.0], [22.8, 323.0], [22.9, 323.0], [23.0, 323.0], [23.1, 323.0], [23.2, 323.0], [23.3, 323.0], [23.4, 323.0], [23.5, 323.0], [23.6, 323.0], [23.7, 323.0], [23.8, 323.0], [23.9, 324.0], [24.0, 324.0], [24.1, 324.0], [24.2, 324.0], [24.3, 324.0], [24.4, 324.0], [24.5, 324.0], [24.6, 324.0], [24.7, 324.0], [24.8, 324.0], [24.9, 324.0], [25.0, 324.0], [25.1, 324.0], [25.2, 325.0], [25.3, 325.0], [25.4, 325.0], [25.5, 325.0], [25.6, 325.0], [25.7, 325.0], [25.8, 325.0], [25.9, 325.0], [26.0, 325.0], [26.1, 325.0], [26.2, 325.0], [26.3, 325.0], [26.4, 325.0], [26.5, 326.0], [26.6, 326.0], [26.7, 326.0], [26.8, 326.0], [26.9, 326.0], [27.0, 326.0], [27.1, 326.0], [27.2, 326.0], [27.3, 326.0], [27.4, 326.0], [27.5, 327.0], [27.6, 327.0], [27.7, 327.0], [27.8, 327.0], [27.9, 327.0], [28.0, 327.0], [28.1, 327.0], [28.2, 327.0], [28.3, 327.0], [28.4, 327.0], [28.5, 328.0], [28.6, 328.0], [28.7, 328.0], [28.8, 328.0], [28.9, 328.0], [29.0, 328.0], [29.1, 328.0], [29.2, 328.0], [29.3, 328.0], [29.4, 328.0], [29.5, 328.0], [29.6, 328.0], [29.7, 328.0], [29.8, 329.0], [29.9, 329.0], [30.0, 329.0], [30.1, 329.0], [30.2, 329.0], [30.3, 329.0], [30.4, 329.0], [30.5, 330.0], [30.6, 330.0], [30.7, 330.0], [30.8, 330.0], [30.9, 330.0], [31.0, 330.0], [31.1, 330.0], [31.2, 330.0], [31.3, 330.0], [31.4, 331.0], [31.5, 331.0], [31.6, 331.0], [31.7, 331.0], [31.8, 331.0], [31.9, 331.0], [32.0, 332.0], [32.1, 332.0], [32.2, 332.0], [32.3, 332.0], [32.4, 332.0], [32.5, 332.0], [32.6, 332.0], [32.7, 333.0], [32.8, 333.0], [32.9, 333.0], [33.0, 333.0], [33.1, 333.0], [33.2, 333.0], [33.3, 333.0], [33.4, 333.0], [33.5, 333.0], [33.6, 333.0], [33.7, 333.0], [33.8, 334.0], [33.9, 334.0], [34.0, 334.0], [34.1, 334.0], [34.2, 334.0], [34.3, 334.0], [34.4, 334.0], [34.5, 335.0], [34.6, 335.0], [34.7, 335.0], [34.8, 335.0], [34.9, 335.0], [35.0, 336.0], [35.1, 336.0], [35.2, 336.0], [35.3, 336.0], [35.4, 336.0], [35.5, 336.0], [35.6, 336.0], [35.7, 336.0], [35.8, 336.0], [35.9, 336.0], [36.0, 336.0], [36.1, 336.0], [36.2, 337.0], [36.3, 337.0], [36.4, 337.0], [36.5, 337.0], [36.6, 337.0], [36.7, 337.0], [36.8, 337.0], [36.9, 337.0], [37.0, 338.0], [37.1, 338.0], [37.2, 338.0], [37.3, 338.0], [37.4, 338.0], [37.5, 338.0], [37.6, 338.0], [37.7, 338.0], [37.8, 338.0], [37.9, 339.0], [38.0, 339.0], [38.1, 339.0], [38.2, 340.0], [38.3, 340.0], [38.4, 340.0], [38.5, 340.0], [38.6, 340.0], [38.7, 340.0], [38.8, 340.0], [38.9, 340.0], [39.0, 341.0], [39.1, 341.0], [39.2, 342.0], [39.3, 342.0], [39.4, 342.0], [39.5, 342.0], [39.6, 342.0], [39.7, 342.0], [39.8, 342.0], [39.9, 342.0], [40.0, 342.0], [40.1, 342.0], [40.2, 343.0], [40.3, 343.0], [40.4, 343.0], [40.5, 344.0], [40.6, 344.0], [40.7, 344.0], [40.8, 344.0], [40.9, 344.0], [41.0, 344.0], [41.1, 344.0], [41.2, 345.0], [41.3, 345.0], [41.4, 345.0], [41.5, 345.0], [41.6, 345.0], [41.7, 345.0], [41.8, 345.0], [41.9, 345.0], [42.0, 345.0], [42.1, 345.0], [42.2, 346.0], [42.3, 346.0], [42.4, 346.0], [42.5, 346.0], [42.6, 346.0], [42.7, 347.0], [42.8, 347.0], [42.9, 347.0], [43.0, 347.0], [43.1, 347.0], [43.2, 347.0], [43.3, 347.0], [43.4, 348.0], [43.5, 348.0], [43.6, 348.0], [43.7, 348.0], [43.8, 348.0], [43.9, 348.0], [44.0, 348.0], [44.1, 348.0], [44.2, 348.0], [44.3, 348.0], [44.4, 348.0], [44.5, 348.0], [44.6, 348.0], [44.7, 349.0], [44.8, 349.0], [44.9, 349.0], [45.0, 349.0], [45.1, 349.0], [45.2, 349.0], [45.3, 349.0], [45.4, 349.0], [45.5, 349.0], [45.6, 349.0], [45.7, 349.0], [45.8, 349.0], [45.9, 349.0], [46.0, 349.0], [46.1, 349.0], [46.2, 349.0], [46.3, 350.0], [46.4, 350.0], [46.5, 350.0], [46.6, 350.0], [46.7, 350.0], [46.8, 350.0], [46.9, 351.0], [47.0, 351.0], [47.1, 351.0], [47.2, 351.0], [47.3, 351.0], [47.4, 351.0], [47.5, 351.0], [47.6, 351.0], [47.7, 351.0], [47.8, 351.0], [47.9, 351.0], [48.0, 351.0], [48.1, 351.0], [48.2, 351.0], [48.3, 351.0], [48.4, 351.0], [48.5, 351.0], [48.6, 351.0], [48.7, 351.0], [48.8, 351.0], [48.9, 352.0], [49.0, 352.0], [49.1, 352.0], [49.2, 352.0], [49.3, 352.0], [49.4, 352.0], [49.5, 352.0], [49.6, 352.0], [49.7, 352.0], [49.8, 352.0], [49.9, 352.0], [50.0, 352.0], [50.1, 352.0], [50.2, 352.0], [50.3, 352.0], [50.4, 352.0], [50.5, 352.0], [50.6, 352.0], [50.7, 352.0], [50.8, 353.0], [50.9, 353.0], [51.0, 353.0], [51.1, 353.0], [51.2, 353.0], [51.3, 353.0], [51.4, 353.0], [51.5, 353.0], [51.6, 353.0], [51.7, 353.0], [51.8, 353.0], [51.9, 353.0], [52.0, 353.0], [52.1, 353.0], [52.2, 354.0], [52.3, 354.0], [52.4, 354.0], [52.5, 354.0], [52.6, 354.0], [52.7, 354.0], [52.8, 354.0], [52.9, 354.0], [53.0, 354.0], [53.1, 354.0], [53.2, 354.0], [53.3, 355.0], [53.4, 355.0], [53.5, 355.0], [53.6, 355.0], [53.7, 355.0], [53.8, 355.0], [53.9, 355.0], [54.0, 355.0], [54.1, 355.0], [54.2, 356.0], [54.3, 356.0], [54.4, 356.0], [54.5, 356.0], [54.6, 356.0], [54.7, 356.0], [54.8, 356.0], [54.9, 356.0], [55.0, 357.0], [55.1, 357.0], [55.2, 357.0], [55.3, 357.0], [55.4, 357.0], [55.5, 357.0], [55.6, 357.0], [55.7, 357.0], [55.8, 357.0], [55.9, 357.0], [56.0, 357.0], [56.1, 357.0], [56.2, 358.0], [56.3, 358.0], [56.4, 358.0], [56.5, 358.0], [56.6, 358.0], [56.7, 358.0], [56.8, 359.0], [56.9, 359.0], [57.0, 359.0], [57.1, 359.0], [57.2, 360.0], [57.3, 360.0], [57.4, 360.0], [57.5, 360.0], [57.6, 360.0], [57.7, 360.0], [57.8, 360.0], [57.9, 360.0], [58.0, 360.0], [58.1, 360.0], [58.2, 360.0], [58.3, 361.0], [58.4, 361.0], [58.5, 362.0], [58.6, 362.0], [58.7, 362.0], [58.8, 362.0], [58.9, 362.0], [59.0, 362.0], [59.1, 362.0], [59.2, 362.0], [59.3, 362.0], [59.4, 363.0], [59.5, 363.0], [59.6, 363.0], [59.7, 363.0], [59.8, 363.0], [59.9, 364.0], [60.0, 364.0], [60.1, 364.0], [60.2, 364.0], [60.3, 364.0], [60.4, 364.0], [60.5, 364.0], [60.6, 364.0], [60.7, 365.0], [60.8, 365.0], [60.9, 365.0], [61.0, 365.0], [61.1, 365.0], [61.2, 365.0], [61.3, 365.0], [61.4, 365.0], [61.5, 366.0], [61.6, 366.0], [61.7, 366.0], [61.8, 366.0], [61.9, 367.0], [62.0, 367.0], [62.1, 367.0], [62.2, 367.0], [62.3, 367.0], [62.4, 367.0], [62.5, 367.0], [62.6, 367.0], [62.7, 368.0], [62.8, 368.0], [62.9, 368.0], [63.0, 368.0], [63.1, 368.0], [63.2, 368.0], [63.3, 369.0], [63.4, 369.0], [63.5, 369.0], [63.6, 369.0], [63.7, 370.0], [63.8, 370.0], [63.9, 370.0], [64.0, 370.0], [64.1, 370.0], [64.2, 372.0], [64.3, 372.0], [64.4, 372.0], [64.5, 372.0], [64.6, 372.0], [64.7, 372.0], [64.8, 372.0], [64.9, 373.0], [65.0, 373.0], [65.1, 373.0], [65.2, 373.0], [65.3, 373.0], [65.4, 373.0], [65.5, 374.0], [65.6, 374.0], [65.7, 374.0], [65.8, 374.0], [65.9, 374.0], [66.0, 374.0], [66.1, 374.0], [66.2, 374.0], [66.3, 374.0], [66.4, 375.0], [66.5, 375.0], [66.6, 375.0], [66.7, 375.0], [66.8, 375.0], [66.9, 375.0], [67.0, 375.0], [67.1, 375.0], [67.2, 376.0], [67.3, 376.0], [67.4, 376.0], [67.5, 376.0], [67.6, 376.0], [67.7, 377.0], [67.8, 377.0], [67.9, 377.0], [68.0, 377.0], [68.1, 377.0], [68.2, 377.0], [68.3, 377.0], [68.4, 377.0], [68.5, 378.0], [68.6, 378.0], [68.7, 378.0], [68.8, 379.0], [68.9, 379.0], [69.0, 379.0], [69.1, 379.0], [69.2, 379.0], [69.3, 379.0], [69.4, 379.0], [69.5, 380.0], [69.6, 380.0], [69.7, 380.0], [69.8, 380.0], [69.9, 381.0], [70.0, 381.0], [70.1, 381.0], [70.2, 381.0], [70.3, 381.0], [70.4, 381.0], [70.5, 381.0], [70.6, 381.0], [70.7, 382.0], [70.8, 382.0], [70.9, 382.0], [71.0, 382.0], [71.1, 382.0], [71.2, 382.0], [71.3, 383.0], [71.4, 384.0], [71.5, 384.0], [71.6, 384.0], [71.7, 384.0], [71.8, 385.0], [71.9, 385.0], [72.0, 385.0], [72.1, 385.0], [72.2, 385.0], [72.3, 386.0], [72.4, 386.0], [72.5, 386.0], [72.6, 386.0], [72.7, 386.0], [72.8, 386.0], [72.9, 387.0], [73.0, 387.0], [73.1, 387.0], [73.2, 387.0], [73.3, 387.0], [73.4, 388.0], [73.5, 388.0], [73.6, 388.0], [73.7, 388.0], [73.8, 388.0], [73.9, 388.0], [74.0, 389.0], [74.1, 389.0], [74.2, 389.0], [74.3, 389.0], [74.4, 390.0], [74.5, 390.0], [74.6, 390.0], [74.7, 390.0], [74.8, 390.0], [74.9, 390.0], [75.0, 390.0], [75.1, 390.0], [75.2, 391.0], [75.3, 391.0], [75.4, 392.0], [75.5, 392.0], [75.6, 392.0], [75.7, 392.0], [75.8, 392.0], [75.9, 392.0], [76.0, 393.0], [76.1, 393.0], [76.2, 393.0], [76.3, 393.0], [76.4, 394.0], [76.5, 394.0], [76.6, 394.0], [76.7, 394.0], [76.8, 395.0], [76.9, 395.0], [77.0, 396.0], [77.1, 396.0], [77.2, 396.0], [77.3, 396.0], [77.4, 396.0], [77.5, 396.0], [77.6, 396.0], [77.7, 396.0], [77.8, 396.0], [77.9, 396.0], [78.0, 396.0], [78.1, 396.0], [78.2, 396.0], [78.3, 396.0], [78.4, 397.0], [78.5, 397.0], [78.6, 397.0], [78.7, 397.0], [78.8, 397.0], [78.9, 398.0], [79.0, 398.0], [79.1, 398.0], [79.2, 399.0], [79.3, 399.0], [79.4, 400.0], [79.5, 401.0], [79.6, 401.0], [79.7, 401.0], [79.8, 401.0], [79.9, 403.0], [80.0, 403.0], [80.1, 403.0], [80.2, 404.0], [80.3, 404.0], [80.4, 404.0], [80.5, 404.0], [80.6, 404.0], [80.7, 405.0], [80.8, 405.0], [80.9, 405.0], [81.0, 406.0], [81.1, 406.0], [81.2, 406.0], [81.3, 407.0], [81.4, 407.0], [81.5, 407.0], [81.6, 407.0], [81.7, 407.0], [81.8, 407.0], [81.9, 408.0], [82.0, 409.0], [82.1, 409.0], [82.2, 410.0], [82.3, 410.0], [82.4, 411.0], [82.5, 412.0], [82.6, 412.0], [82.7, 412.0], [82.8, 412.0], [82.9, 412.0], [83.0, 413.0], [83.1, 413.0], [83.2, 413.0], [83.3, 413.0], [83.4, 413.0], [83.5, 415.0], [83.6, 415.0], [83.7, 415.0], [83.8, 415.0], [83.9, 415.0], [84.0, 415.0], [84.1, 415.0], [84.2, 416.0], [84.3, 416.0], [84.4, 417.0], [84.5, 417.0], [84.6, 417.0], [84.7, 418.0], [84.8, 418.0], [84.9, 418.0], [85.0, 418.0], [85.1, 418.0], [85.2, 419.0], [85.3, 419.0], [85.4, 419.0], [85.5, 420.0], [85.6, 420.0], [85.7, 421.0], [85.8, 423.0], [85.9, 423.0], [86.0, 423.0], [86.1, 423.0], [86.2, 423.0], [86.3, 424.0], [86.4, 424.0], [86.5, 425.0], [86.6, 425.0], [86.7, 425.0], [86.8, 426.0], [86.9, 426.0], [87.0, 426.0], [87.1, 426.0], [87.2, 428.0], [87.3, 429.0], [87.4, 429.0], [87.5, 430.0], [87.6, 430.0], [87.7, 430.0], [87.8, 430.0], [87.9, 430.0], [88.0, 430.0], [88.1, 430.0], [88.2, 431.0], [88.3, 431.0], [88.4, 431.0], [88.5, 431.0], [88.6, 431.0], [88.7, 431.0], [88.8, 431.0], [88.9, 432.0], [89.0, 432.0], [89.1, 432.0], [89.2, 432.0], [89.3, 432.0], [89.4, 432.0], [89.5, 433.0], [89.6, 433.0], [89.7, 436.0], [89.8, 436.0], [89.9, 436.0], [90.0, 436.0], [90.1, 436.0], [90.2, 436.0], [90.3, 437.0], [90.4, 437.0], [90.5, 437.0], [90.6, 437.0], [90.7, 438.0], [90.8, 439.0], [90.9, 440.0], [91.0, 440.0], [91.1, 440.0], [91.2, 441.0], [91.3, 441.0], [91.4, 443.0], [91.5, 444.0], [91.6, 444.0], [91.7, 445.0], [91.8, 445.0], [91.9, 447.0], [92.0, 448.0], [92.1, 448.0], [92.2, 449.0], [92.3, 450.0], [92.4, 452.0], [92.5, 452.0], [92.6, 452.0], [92.7, 455.0], [92.8, 455.0], [92.9, 455.0], [93.0, 455.0], [93.1, 455.0], [93.2, 455.0], [93.3, 456.0], [93.4, 459.0], [93.5, 462.0], [93.6, 462.0], [93.7, 463.0], [93.8, 466.0], [93.9, 467.0], [94.0, 468.0], [94.1, 468.0], [94.2, 472.0], [94.3, 474.0], [94.4, 475.0], [94.5, 476.0], [94.6, 476.0], [94.7, 484.0], [94.8, 485.0], [94.9, 490.0], [95.0, 491.0], [95.1, 491.0], [95.2, 495.0], [95.3, 497.0], [95.4, 499.0], [95.5, 501.0], [95.6, 501.0], [95.7, 509.0], [95.8, 512.0], [95.9, 514.0], [96.0, 516.0], [96.1, 516.0], [96.2, 518.0], [96.3, 521.0], [96.4, 522.0], [96.5, 525.0], [96.6, 525.0], [96.7, 525.0], [96.8, 543.0], [96.9, 544.0], [97.0, 561.0], [97.1, 561.0], [97.2, 648.0], [97.3, 649.0], [97.4, 663.0], [97.5, 665.0], [97.6, 665.0], [97.7, 686.0], [97.8, 967.0], [97.9, 969.0], [98.0, 1014.0], [98.1, 1014.0], [98.2, 1032.0], [98.3, 1033.0], [98.4, 1036.0], [98.5, 1058.0], [98.6, 1058.0], [98.7, 1063.0], [98.8, 1073.0], [98.9, 1084.0], [99.0, 1084.0], [99.1, 1084.0], [99.2, 1108.0], [99.3, 1277.0], [99.4, 1277.0], [99.5, 1287.0], [99.6, 1287.0], [99.7, 1337.0], [99.8, 1338.0], [99.9, 1362.0]], "isOverall": false, "label": "getBooking", "isController": false}, {"data": [[0.0, 304.0], [0.1, 304.0], [0.2, 304.0], [0.3, 305.0], [0.4, 305.0], [0.5, 306.0], [0.6, 306.0], [0.7, 306.0], [0.8, 306.0], [0.9, 306.0], [1.0, 308.0], [1.1, 308.0], [1.2, 308.0], [1.3, 308.0], [1.4, 308.0], [1.5, 310.0], [1.6, 310.0], [1.7, 310.0], [1.8, 310.0], [1.9, 310.0], [2.0, 312.0], [2.1, 312.0], [2.2, 312.0], [2.3, 313.0], [2.4, 313.0], [2.5, 313.0], [2.6, 313.0], [2.7, 313.0], [2.8, 314.0], [2.9, 314.0], [3.0, 314.0], [3.1, 314.0], [3.2, 314.0], [3.3, 315.0], [3.4, 315.0], [3.5, 315.0], [3.6, 315.0], [3.7, 315.0], [3.8, 315.0], [3.9, 315.0], [4.0, 315.0], [4.1, 315.0], [4.2, 315.0], [4.3, 315.0], [4.4, 315.0], [4.5, 316.0], [4.6, 316.0], [4.7, 316.0], [4.8, 316.0], [4.9, 316.0], [5.0, 317.0], [5.1, 317.0], [5.2, 317.0], [5.3, 317.0], [5.4, 317.0], [5.5, 317.0], [5.6, 317.0], [5.7, 317.0], [5.8, 317.0], [5.9, 317.0], [6.0, 318.0], [6.1, 318.0], [6.2, 318.0], [6.3, 318.0], [6.4, 318.0], [6.5, 318.0], [6.6, 318.0], [6.7, 318.0], [6.8, 318.0], [6.9, 318.0], [7.0, 318.0], [7.1, 318.0], [7.2, 318.0], [7.3, 318.0], [7.4, 318.0], [7.5, 318.0], [7.6, 318.0], [7.7, 318.0], [7.8, 318.0], [7.9, 318.0], [8.0, 318.0], [8.1, 318.0], [8.2, 318.0], [8.3, 319.0], [8.4, 319.0], [8.5, 320.0], [8.6, 320.0], [8.7, 320.0], [8.8, 320.0], [8.9, 320.0], [9.0, 321.0], [9.1, 321.0], [9.2, 321.0], [9.3, 321.0], [9.4, 321.0], [9.5, 322.0], [9.6, 322.0], [9.7, 322.0], [9.8, 322.0], [9.9, 322.0], [10.0, 322.0], [10.1, 322.0], [10.2, 322.0], [10.3, 323.0], [10.4, 323.0], [10.5, 323.0], [10.6, 323.0], [10.7, 323.0], [10.8, 323.0], [10.9, 323.0], [11.0, 323.0], [11.1, 323.0], [11.2, 323.0], [11.3, 325.0], [11.4, 325.0], [11.5, 325.0], [11.6, 325.0], [11.7, 325.0], [11.8, 325.0], [11.9, 325.0], [12.0, 325.0], [12.1, 325.0], [12.2, 325.0], [12.3, 325.0], [12.4, 325.0], [12.5, 325.0], [12.6, 325.0], [12.7, 325.0], [12.8, 325.0], [12.9, 325.0], [13.0, 325.0], [13.1, 325.0], [13.2, 325.0], [13.3, 326.0], [13.4, 326.0], [13.5, 326.0], [13.6, 326.0], [13.7, 326.0], [13.8, 326.0], [13.9, 326.0], [14.0, 326.0], [14.1, 326.0], [14.2, 326.0], [14.3, 326.0], [14.4, 326.0], [14.5, 326.0], [14.6, 326.0], [14.7, 326.0], [14.8, 327.0], [14.9, 327.0], [15.0, 327.0], [15.1, 327.0], [15.2, 327.0], [15.3, 327.0], [15.4, 327.0], [15.5, 328.0], [15.6, 328.0], [15.7, 328.0], [15.8, 328.0], [15.9, 328.0], [16.0, 328.0], [16.1, 328.0], [16.2, 328.0], [16.3, 329.0], [16.4, 329.0], [16.5, 329.0], [16.6, 329.0], [16.7, 329.0], [16.8, 329.0], [16.9, 329.0], [17.0, 330.0], [17.1, 330.0], [17.2, 330.0], [17.3, 330.0], [17.4, 330.0], [17.5, 330.0], [17.6, 330.0], [17.7, 330.0], [17.8, 330.0], [17.9, 330.0], [18.0, 330.0], [18.1, 330.0], [18.2, 330.0], [18.3, 331.0], [18.4, 331.0], [18.5, 331.0], [18.6, 331.0], [18.7, 331.0], [18.8, 332.0], [18.9, 332.0], [19.0, 332.0], [19.1, 332.0], [19.2, 332.0], [19.3, 332.0], [19.4, 332.0], [19.5, 333.0], [19.6, 333.0], [19.7, 333.0], [19.8, 333.0], [19.9, 333.0], [20.0, 333.0], [20.1, 333.0], [20.2, 333.0], [20.3, 333.0], [20.4, 333.0], [20.5, 334.0], [20.6, 334.0], [20.7, 334.0], [20.8, 334.0], [20.9, 334.0], [21.0, 335.0], [21.1, 335.0], [21.2, 335.0], [21.3, 335.0], [21.4, 335.0], [21.5, 335.0], [21.6, 335.0], [21.7, 335.0], [21.8, 335.0], [21.9, 335.0], [22.0, 336.0], [22.1, 336.0], [22.2, 336.0], [22.3, 336.0], [22.4, 336.0], [22.5, 336.0], [22.6, 336.0], [22.7, 336.0], [22.8, 336.0], [22.9, 336.0], [23.0, 336.0], [23.1, 336.0], [23.2, 336.0], [23.3, 336.0], [23.4, 336.0], [23.5, 336.0], [23.6, 336.0], [23.7, 336.0], [23.8, 336.0], [23.9, 336.0], [24.0, 337.0], [24.1, 337.0], [24.2, 337.0], [24.3, 337.0], [24.4, 337.0], [24.5, 337.0], [24.6, 337.0], [24.7, 337.0], [24.8, 338.0], [24.9, 338.0], [25.0, 338.0], [25.1, 338.0], [25.2, 338.0], [25.3, 339.0], [25.4, 339.0], [25.5, 339.0], [25.6, 339.0], [25.7, 339.0], [25.8, 339.0], [25.9, 339.0], [26.0, 339.0], [26.1, 339.0], [26.2, 339.0], [26.3, 340.0], [26.4, 340.0], [26.5, 340.0], [26.6, 340.0], [26.7, 340.0], [26.8, 340.0], [26.9, 340.0], [27.0, 340.0], [27.1, 340.0], [27.2, 340.0], [27.3, 340.0], [27.4, 340.0], [27.5, 340.0], [27.6, 340.0], [27.7, 340.0], [27.8, 341.0], [27.9, 341.0], [28.0, 341.0], [28.1, 341.0], [28.2, 341.0], [28.3, 342.0], [28.4, 342.0], [28.5, 342.0], [28.6, 342.0], [28.7, 342.0], [28.8, 342.0], [28.9, 342.0], [29.0, 343.0], [29.1, 343.0], [29.2, 343.0], [29.3, 343.0], [29.4, 343.0], [29.5, 343.0], [29.6, 343.0], [29.7, 343.0], [29.8, 344.0], [29.9, 344.0], [30.0, 344.0], [30.1, 344.0], [30.2, 344.0], [30.3, 344.0], [30.4, 344.0], [30.5, 345.0], [30.6, 345.0], [30.7, 345.0], [30.8, 345.0], [30.9, 345.0], [31.0, 345.0], [31.1, 345.0], [31.2, 345.0], [31.3, 345.0], [31.4, 345.0], [31.5, 345.0], [31.6, 345.0], [31.7, 345.0], [31.8, 345.0], [31.9, 345.0], [32.0, 346.0], [32.1, 346.0], [32.2, 346.0], [32.3, 346.0], [32.4, 346.0], [32.5, 346.0], [32.6, 346.0], [32.7, 346.0], [32.8, 346.0], [32.9, 346.0], [33.0, 346.0], [33.1, 346.0], [33.2, 346.0], [33.3, 347.0], [33.4, 347.0], [33.5, 347.0], [33.6, 347.0], [33.7, 347.0], [33.8, 348.0], [33.9, 348.0], [34.0, 348.0], [34.1, 348.0], [34.2, 348.0], [34.3, 348.0], [34.4, 348.0], [34.5, 348.0], [34.6, 348.0], [34.7, 348.0], [34.8, 349.0], [34.9, 349.0], [35.0, 349.0], [35.1, 349.0], [35.2, 349.0], [35.3, 349.0], [35.4, 349.0], [35.5, 349.0], [35.6, 349.0], [35.7, 349.0], [35.8, 350.0], [35.9, 350.0], [36.0, 351.0], [36.1, 351.0], [36.2, 351.0], [36.3, 351.0], [36.4, 351.0], [36.5, 351.0], [36.6, 351.0], [36.7, 351.0], [36.8, 351.0], [36.9, 351.0], [37.0, 351.0], [37.1, 351.0], [37.2, 351.0], [37.3, 352.0], [37.4, 352.0], [37.5, 352.0], [37.6, 352.0], [37.7, 352.0], [37.8, 352.0], [37.9, 352.0], [38.0, 352.0], [38.1, 352.0], [38.2, 352.0], [38.3, 353.0], [38.4, 353.0], [38.5, 353.0], [38.6, 353.0], [38.7, 353.0], [38.8, 354.0], [38.9, 354.0], [39.0, 354.0], [39.1, 354.0], [39.2, 354.0], [39.3, 354.0], [39.4, 354.0], [39.5, 355.0], [39.6, 355.0], [39.7, 355.0], [39.8, 355.0], [39.9, 355.0], [40.0, 355.0], [40.1, 355.0], [40.2, 355.0], [40.3, 355.0], [40.4, 355.0], [40.5, 356.0], [40.6, 356.0], [40.7, 356.0], [40.8, 356.0], [40.9, 356.0], [41.0, 356.0], [41.1, 356.0], [41.2, 356.0], [41.3, 356.0], [41.4, 356.0], [41.5, 356.0], [41.6, 356.0], [41.7, 356.0], [41.8, 356.0], [41.9, 356.0], [42.0, 357.0], [42.1, 357.0], [42.2, 357.0], [42.3, 357.0], [42.4, 357.0], [42.5, 357.0], [42.6, 357.0], [42.7, 357.0], [42.8, 357.0], [42.9, 357.0], [43.0, 357.0], [43.1, 357.0], [43.2, 357.0], [43.3, 357.0], [43.4, 357.0], [43.5, 358.0], [43.6, 358.0], [43.7, 358.0], [43.8, 358.0], [43.9, 358.0], [44.0, 358.0], [44.1, 358.0], [44.2, 358.0], [44.3, 359.0], [44.4, 359.0], [44.5, 360.0], [44.6, 360.0], [44.7, 360.0], [44.8, 360.0], [44.9, 360.0], [45.0, 361.0], [45.1, 361.0], [45.2, 361.0], [45.3, 362.0], [45.4, 362.0], [45.5, 363.0], [45.6, 363.0], [45.7, 363.0], [45.8, 363.0], [45.9, 363.0], [46.0, 364.0], [46.1, 364.0], [46.2, 364.0], [46.3, 364.0], [46.4, 364.0], [46.5, 365.0], [46.6, 365.0], [46.7, 365.0], [46.8, 365.0], [46.9, 365.0], [47.0, 365.0], [47.1, 365.0], [47.2, 365.0], [47.3, 366.0], [47.4, 366.0], [47.5, 366.0], [47.6, 366.0], [47.7, 366.0], [47.8, 367.0], [47.9, 367.0], [48.0, 367.0], [48.1, 367.0], [48.2, 367.0], [48.3, 369.0], [48.4, 369.0], [48.5, 370.0], [48.6, 370.0], [48.7, 370.0], [48.8, 370.0], [48.9, 370.0], [49.0, 370.0], [49.1, 370.0], [49.2, 370.0], [49.3, 370.0], [49.4, 370.0], [49.5, 371.0], [49.6, 371.0], [49.7, 371.0], [49.8, 371.0], [49.9, 371.0], [50.0, 373.0], [50.1, 373.0], [50.2, 373.0], [50.3, 373.0], [50.4, 373.0], [50.5, 373.0], [50.6, 373.0], [50.7, 373.0], [50.8, 373.0], [50.9, 373.0], [51.0, 374.0], [51.1, 374.0], [51.2, 374.0], [51.3, 374.0], [51.4, 374.0], [51.5, 374.0], [51.6, 374.0], [51.7, 374.0], [51.8, 377.0], [51.9, 377.0], [52.0, 377.0], [52.1, 377.0], [52.2, 377.0], [52.3, 377.0], [52.4, 377.0], [52.5, 378.0], [52.6, 378.0], [52.7, 378.0], [52.8, 379.0], [52.9, 379.0], [53.0, 379.0], [53.1, 379.0], [53.2, 379.0], [53.3, 379.0], [53.4, 379.0], [53.5, 380.0], [53.6, 380.0], [53.7, 380.0], [53.8, 380.0], [53.9, 380.0], [54.0, 380.0], [54.1, 380.0], [54.2, 380.0], [54.3, 381.0], [54.4, 381.0], [54.5, 381.0], [54.6, 381.0], [54.7, 381.0], [54.8, 382.0], [54.9, 382.0], [55.0, 382.0], [55.1, 382.0], [55.2, 382.0], [55.3, 383.0], [55.4, 383.0], [55.5, 383.0], [55.6, 383.0], [55.7, 383.0], [55.8, 384.0], [55.9, 384.0], [56.0, 385.0], [56.1, 385.0], [56.2, 385.0], [56.3, 386.0], [56.4, 386.0], [56.5, 388.0], [56.6, 388.0], [56.7, 388.0], [56.8, 388.0], [56.9, 388.0], [57.0, 388.0], [57.1, 388.0], [57.2, 388.0], [57.3, 389.0], [57.4, 389.0], [57.5, 390.0], [57.6, 390.0], [57.7, 390.0], [57.8, 390.0], [57.9, 390.0], [58.0, 391.0], [58.1, 391.0], [58.2, 391.0], [58.3, 393.0], [58.4, 393.0], [58.5, 393.0], [58.6, 393.0], [58.7, 393.0], [58.8, 394.0], [58.9, 394.0], [59.0, 394.0], [59.1, 394.0], [59.2, 394.0], [59.3, 394.0], [59.4, 394.0], [59.5, 396.0], [59.6, 396.0], [59.7, 396.0], [59.8, 397.0], [59.9, 397.0], [60.0, 398.0], [60.1, 398.0], [60.2, 398.0], [60.3, 398.0], [60.4, 398.0], [60.5, 399.0], [60.6, 399.0], [60.7, 399.0], [60.8, 400.0], [60.9, 400.0], [61.0, 400.0], [61.1, 400.0], [61.2, 400.0], [61.3, 401.0], [61.4, 401.0], [61.5, 403.0], [61.6, 403.0], [61.7, 403.0], [61.8, 405.0], [61.9, 405.0], [62.0, 405.0], [62.1, 405.0], [62.2, 405.0], [62.3, 407.0], [62.4, 407.0], [62.5, 407.0], [62.6, 407.0], [62.7, 407.0], [62.8, 407.0], [62.9, 407.0], [63.0, 408.0], [63.1, 408.0], [63.2, 408.0], [63.3, 410.0], [63.4, 410.0], [63.5, 411.0], [63.6, 411.0], [63.7, 411.0], [63.8, 411.0], [63.9, 411.0], [64.0, 412.0], [64.1, 412.0], [64.2, 412.0], [64.3, 412.0], [64.4, 412.0], [64.5, 412.0], [64.6, 412.0], [64.7, 412.0], [64.8, 412.0], [64.9, 412.0], [65.0, 413.0], [65.1, 413.0], [65.2, 413.0], [65.3, 413.0], [65.4, 413.0], [65.5, 417.0], [65.6, 417.0], [65.7, 417.0], [65.8, 418.0], [65.9, 418.0], [66.0, 419.0], [66.1, 419.0], [66.2, 419.0], [66.3, 419.0], [66.4, 419.0], [66.5, 419.0], [66.6, 419.0], [66.7, 419.0], [66.8, 419.0], [66.9, 419.0], [67.0, 420.0], [67.1, 420.0], [67.2, 420.0], [67.3, 420.0], [67.4, 420.0], [67.5, 420.0], [67.6, 420.0], [67.7, 420.0], [67.8, 422.0], [67.9, 422.0], [68.0, 423.0], [68.1, 423.0], [68.2, 423.0], [68.3, 425.0], [68.4, 425.0], [68.5, 425.0], [68.6, 425.0], [68.7, 425.0], [68.8, 426.0], [68.9, 426.0], [69.0, 426.0], [69.1, 426.0], [69.2, 426.0], [69.3, 426.0], [69.4, 426.0], [69.5, 429.0], [69.6, 429.0], [69.7, 429.0], [69.8, 431.0], [69.9, 431.0], [70.0, 431.0], [70.1, 431.0], [70.2, 431.0], [70.3, 432.0], [70.4, 432.0], [70.5, 432.0], [70.6, 432.0], [70.7, 432.0], [70.8, 436.0], [70.9, 436.0], [71.0, 436.0], [71.1, 436.0], [71.2, 436.0], [71.3, 437.0], [71.4, 437.0], [71.5, 445.0], [71.6, 445.0], [71.7, 445.0], [71.8, 446.0], [71.9, 446.0], [72.0, 446.0], [72.1, 446.0], [72.2, 446.0], [72.3, 447.0], [72.4, 447.0], [72.5, 449.0], [72.6, 449.0], [72.7, 449.0], [72.8, 449.0], [72.9, 449.0], [73.0, 449.0], [73.1, 449.0], [73.2, 449.0], [73.3, 450.0], [73.4, 450.0], [73.5, 451.0], [73.6, 451.0], [73.7, 451.0], [73.8, 453.0], [73.9, 453.0], [74.0, 454.0], [74.1, 454.0], [74.2, 454.0], [74.3, 455.0], [74.4, 455.0], [74.5, 456.0], [74.6, 456.0], [74.7, 456.0], [74.8, 457.0], [74.9, 457.0], [75.0, 457.0], [75.1, 457.0], [75.2, 457.0], [75.3, 458.0], [75.4, 458.0], [75.5, 461.0], [75.6, 461.0], [75.7, 461.0], [75.8, 461.0], [75.9, 461.0], [76.0, 462.0], [76.1, 462.0], [76.2, 462.0], [76.3, 464.0], [76.4, 464.0], [76.5, 467.0], [76.6, 467.0], [76.7, 467.0], [76.8, 468.0], [76.9, 468.0], [77.0, 470.0], [77.1, 470.0], [77.2, 470.0], [77.3, 473.0], [77.4, 473.0], [77.5, 473.0], [77.6, 473.0], [77.7, 473.0], [77.8, 473.0], [77.9, 473.0], [78.0, 474.0], [78.1, 474.0], [78.2, 474.0], [78.3, 475.0], [78.4, 475.0], [78.5, 475.0], [78.6, 475.0], [78.7, 475.0], [78.8, 479.0], [78.9, 479.0], [79.0, 479.0], [79.1, 479.0], [79.2, 479.0], [79.3, 480.0], [79.4, 480.0], [79.5, 480.0], [79.6, 480.0], [79.7, 480.0], [79.8, 481.0], [79.9, 481.0], [80.0, 484.0], [80.1, 484.0], [80.2, 484.0], [80.3, 486.0], [80.4, 486.0], [80.5, 486.0], [80.6, 486.0], [80.7, 486.0], [80.8, 487.0], [80.9, 487.0], [81.0, 488.0], [81.1, 488.0], [81.2, 488.0], [81.3, 488.0], [81.4, 488.0], [81.5, 488.0], [81.6, 488.0], [81.7, 488.0], [81.8, 490.0], [81.9, 490.0], [82.0, 490.0], [82.1, 490.0], [82.2, 490.0], [82.3, 492.0], [82.4, 492.0], [82.5, 494.0], [82.6, 494.0], [82.7, 494.0], [82.8, 498.0], [82.9, 498.0], [83.0, 499.0], [83.1, 499.0], [83.2, 499.0], [83.3, 499.0], [83.4, 499.0], [83.5, 502.0], [83.6, 502.0], [83.7, 502.0], [83.8, 505.0], [83.9, 505.0], [84.0, 505.0], [84.1, 505.0], [84.2, 505.0], [84.3, 508.0], [84.4, 508.0], [84.5, 508.0], [84.6, 508.0], [84.7, 508.0], [84.8, 510.0], [84.9, 510.0], [85.0, 513.0], [85.1, 513.0], [85.2, 513.0], [85.3, 515.0], [85.4, 515.0], [85.5, 518.0], [85.6, 518.0], [85.7, 518.0], [85.8, 519.0], [85.9, 519.0], [86.0, 519.0], [86.1, 519.0], [86.2, 519.0], [86.3, 520.0], [86.4, 520.0], [86.5, 523.0], [86.6, 523.0], [86.7, 523.0], [86.8, 528.0], [86.9, 528.0], [87.0, 529.0], [87.1, 529.0], [87.2, 529.0], [87.3, 530.0], [87.4, 530.0], [87.5, 531.0], [87.6, 531.0], [87.7, 531.0], [87.8, 532.0], [87.9, 532.0], [88.0, 533.0], [88.1, 533.0], [88.2, 533.0], [88.3, 534.0], [88.4, 534.0], [88.5, 535.0], [88.6, 535.0], [88.7, 535.0], [88.8, 537.0], [88.9, 537.0], [89.0, 537.0], [89.1, 537.0], [89.2, 537.0], [89.3, 538.0], [89.4, 538.0], [89.5, 542.0], [89.6, 542.0], [89.7, 542.0], [89.8, 554.0], [89.9, 554.0], [90.0, 557.0], [90.1, 557.0], [90.2, 557.0], [90.3, 558.0], [90.4, 558.0], [90.5, 561.0], [90.6, 561.0], [90.7, 561.0], [90.8, 563.0], [90.9, 563.0], [91.0, 563.0], [91.1, 563.0], [91.2, 563.0], [91.3, 565.0], [91.4, 565.0], [91.5, 586.0], [91.6, 586.0], [91.7, 586.0], [91.8, 590.0], [91.9, 590.0], [92.0, 593.0], [92.1, 593.0], [92.2, 593.0], [92.3, 595.0], [92.4, 595.0], [92.5, 605.0], [92.6, 605.0], [92.7, 605.0], [92.8, 606.0], [92.9, 606.0], [93.0, 615.0], [93.1, 615.0], [93.2, 615.0], [93.3, 654.0], [93.4, 654.0], [93.5, 675.0], [93.6, 675.0], [93.7, 675.0], [93.8, 709.0], [93.9, 709.0], [94.0, 749.0], [94.1, 749.0], [94.2, 749.0], [94.3, 755.0], [94.4, 755.0], [94.5, 758.0], [94.6, 758.0], [94.7, 758.0], [94.8, 791.0], [94.9, 791.0], [95.0, 813.0], [95.1, 813.0], [95.2, 813.0], [95.3, 845.0], [95.4, 845.0], [95.5, 877.0], [95.6, 877.0], [95.7, 877.0], [95.8, 989.0], [95.9, 989.0], [96.0, 1047.0], [96.1, 1047.0], [96.2, 1047.0], [96.3, 1102.0], [96.4, 1102.0], [96.5, 1119.0], [96.6, 1119.0], [96.7, 1119.0], [96.8, 1185.0], [96.9, 1185.0], [97.0, 1210.0], [97.1, 1210.0], [97.2, 1210.0], [97.3, 1218.0], [97.4, 1218.0], [97.5, 1222.0], [97.6, 1222.0], [97.7, 1222.0], [97.8, 1223.0], [97.9, 1223.0], [98.0, 1228.0], [98.1, 1228.0], [98.2, 1228.0], [98.3, 1229.0], [98.4, 1229.0], [98.5, 1233.0], [98.6, 1233.0], [98.7, 1233.0], [98.8, 1237.0], [98.9, 1237.0], [99.0, 1249.0], [99.1, 1249.0], [99.2, 1249.0], [99.3, 1270.0], [99.4, 1270.0], [99.5, 1288.0], [99.6, 1288.0], [99.7, 1288.0], [99.8, 1367.0], [99.9, 1367.0]], "isOverall": false, "label": "updateBookingByPatch", "isController": false}, {"data": [[0.0, 297.0], [0.1, 297.0], [0.2, 297.0], [0.3, 297.0], [0.4, 297.0], [0.5, 297.0], [0.6, 297.0], [0.7, 297.0], [0.8, 300.0], [0.9, 300.0], [1.0, 300.0], [1.1, 300.0], [1.2, 300.0], [1.3, 300.0], [1.4, 300.0], [1.5, 300.0], [1.6, 300.0], [1.7, 300.0], [1.8, 300.0], [1.9, 300.0], [2.0, 301.0], [2.1, 301.0], [2.2, 301.0], [2.3, 301.0], [2.4, 301.0], [2.5, 301.0], [2.6, 301.0], [2.7, 301.0], [2.8, 302.0], [2.9, 302.0], [3.0, 303.0], [3.1, 303.0], [3.2, 303.0], [3.3, 304.0], [3.4, 304.0], [3.5, 304.0], [3.6, 304.0], [3.7, 304.0], [3.8, 305.0], [3.9, 305.0], [4.0, 305.0], [4.1, 305.0], [4.2, 305.0], [4.3, 306.0], [4.4, 306.0], [4.5, 306.0], [4.6, 306.0], [4.7, 306.0], [4.8, 307.0], [4.9, 307.0], [5.0, 307.0], [5.1, 307.0], [5.2, 307.0], [5.3, 307.0], [5.4, 307.0], [5.5, 307.0], [5.6, 307.0], [5.7, 307.0], [5.8, 308.0], [5.9, 308.0], [6.0, 308.0], [6.1, 308.0], [6.2, 308.0], [6.3, 308.0], [6.4, 308.0], [6.5, 308.0], [6.6, 308.0], [6.7, 308.0], [6.8, 308.0], [6.9, 308.0], [7.0, 308.0], [7.1, 308.0], [7.2, 308.0], [7.3, 309.0], [7.4, 309.0], [7.5, 309.0], [7.6, 309.0], [7.7, 309.0], [7.8, 309.0], [7.9, 309.0], [8.0, 309.0], [8.1, 309.0], [8.2, 309.0], [8.3, 309.0], [8.4, 309.0], [8.5, 309.0], [8.6, 309.0], [8.7, 309.0], [8.8, 310.0], [8.9, 310.0], [9.0, 310.0], [9.1, 310.0], [9.2, 310.0], [9.3, 310.0], [9.4, 310.0], [9.5, 310.0], [9.6, 310.0], [9.7, 310.0], [9.8, 311.0], [9.9, 311.0], [10.0, 311.0], [10.1, 311.0], [10.2, 311.0], [10.3, 311.0], [10.4, 311.0], [10.5, 311.0], [10.6, 311.0], [10.7, 311.0], [10.8, 311.0], [10.9, 311.0], [11.0, 311.0], [11.1, 311.0], [11.2, 311.0], [11.3, 311.0], [11.4, 311.0], [11.5, 312.0], [11.6, 312.0], [11.7, 312.0], [11.8, 312.0], [11.9, 312.0], [12.0, 312.0], [12.1, 312.0], [12.2, 312.0], [12.3, 312.0], [12.4, 312.0], [12.5, 312.0], [12.6, 312.0], [12.7, 312.0], [12.8, 312.0], [12.9, 312.0], [13.0, 312.0], [13.1, 312.0], [13.2, 312.0], [13.3, 312.0], [13.4, 312.0], [13.5, 312.0], [13.6, 312.0], [13.7, 312.0], [13.8, 313.0], [13.9, 313.0], [14.0, 313.0], [14.1, 313.0], [14.2, 313.0], [14.3, 313.0], [14.4, 313.0], [14.5, 313.0], [14.6, 313.0], [14.7, 313.0], [14.8, 314.0], [14.9, 314.0], [15.0, 314.0], [15.1, 314.0], [15.2, 314.0], [15.3, 314.0], [15.4, 314.0], [15.5, 314.0], [15.6, 314.0], [15.7, 314.0], [15.8, 314.0], [15.9, 314.0], [16.0, 315.0], [16.1, 315.0], [16.2, 315.0], [16.3, 315.0], [16.4, 315.0], [16.5, 315.0], [16.6, 315.0], [16.7, 315.0], [16.8, 315.0], [16.9, 315.0], [17.0, 316.0], [17.1, 316.0], [17.2, 316.0], [17.3, 316.0], [17.4, 316.0], [17.5, 316.0], [17.6, 316.0], [17.7, 316.0], [17.8, 316.0], [17.9, 316.0], [18.0, 317.0], [18.1, 317.0], [18.2, 317.0], [18.3, 318.0], [18.4, 318.0], [18.5, 318.0], [18.6, 318.0], [18.7, 318.0], [18.8, 318.0], [18.9, 318.0], [19.0, 318.0], [19.1, 318.0], [19.2, 318.0], [19.3, 319.0], [19.4, 319.0], [19.5, 319.0], [19.6, 319.0], [19.7, 319.0], [19.8, 319.0], [19.9, 319.0], [20.0, 319.0], [20.1, 319.0], [20.2, 319.0], [20.3, 320.0], [20.4, 320.0], [20.5, 320.0], [20.6, 320.0], [20.7, 320.0], [20.8, 320.0], [20.9, 320.0], [21.0, 320.0], [21.1, 320.0], [21.2, 320.0], [21.3, 320.0], [21.4, 320.0], [21.5, 320.0], [21.6, 320.0], [21.7, 320.0], [21.8, 320.0], [21.9, 320.0], [22.0, 320.0], [22.1, 320.0], [22.2, 320.0], [22.3, 321.0], [22.4, 321.0], [22.5, 321.0], [22.6, 321.0], [22.7, 321.0], [22.8, 321.0], [22.9, 321.0], [23.0, 321.0], [23.1, 321.0], [23.2, 321.0], [23.3, 322.0], [23.4, 322.0], [23.5, 322.0], [23.6, 322.0], [23.7, 322.0], [23.8, 322.0], [23.9, 322.0], [24.0, 322.0], [24.1, 322.0], [24.2, 322.0], [24.3, 322.0], [24.4, 322.0], [24.5, 322.0], [24.6, 322.0], [24.7, 322.0], [24.8, 322.0], [24.9, 322.0], [25.0, 322.0], [25.1, 322.0], [25.2, 322.0], [25.3, 322.0], [25.4, 322.0], [25.5, 322.0], [25.6, 322.0], [25.7, 322.0], [25.8, 323.0], [25.9, 323.0], [26.0, 323.0], [26.1, 323.0], [26.2, 323.0], [26.3, 323.0], [26.4, 323.0], [26.5, 323.0], [26.6, 323.0], [26.7, 323.0], [26.8, 324.0], [26.9, 324.0], [27.0, 324.0], [27.1, 324.0], [27.2, 324.0], [27.3, 324.0], [27.4, 324.0], [27.5, 324.0], [27.6, 324.0], [27.7, 324.0], [27.8, 324.0], [27.9, 324.0], [28.0, 324.0], [28.1, 324.0], [28.2, 324.0], [28.3, 325.0], [28.4, 325.0], [28.5, 325.0], [28.6, 325.0], [28.7, 325.0], [28.8, 325.0], [28.9, 325.0], [29.0, 325.0], [29.1, 325.0], [29.2, 325.0], [29.3, 325.0], [29.4, 325.0], [29.5, 325.0], [29.6, 325.0], [29.7, 325.0], [29.8, 326.0], [29.9, 326.0], [30.0, 326.0], [30.1, 326.0], [30.2, 326.0], [30.3, 326.0], [30.4, 326.0], [30.5, 326.0], [30.6, 326.0], [30.7, 326.0], [30.8, 326.0], [30.9, 326.0], [31.0, 326.0], [31.1, 326.0], [31.2, 326.0], [31.3, 326.0], [31.4, 326.0], [31.5, 326.0], [31.6, 326.0], [31.7, 326.0], [31.8, 326.0], [31.9, 326.0], [32.0, 327.0], [32.1, 327.0], [32.2, 327.0], [32.3, 327.0], [32.4, 327.0], [32.5, 327.0], [32.6, 327.0], [32.7, 327.0], [32.8, 327.0], [32.9, 327.0], [33.0, 327.0], [33.1, 327.0], [33.2, 327.0], [33.3, 327.0], [33.4, 327.0], [33.5, 328.0], [33.6, 328.0], [33.7, 328.0], [33.8, 328.0], [33.9, 328.0], [34.0, 328.0], [34.1, 328.0], [34.2, 328.0], [34.3, 328.0], [34.4, 328.0], [34.5, 328.0], [34.6, 328.0], [34.7, 328.0], [34.8, 328.0], [34.9, 328.0], [35.0, 329.0], [35.1, 329.0], [35.2, 329.0], [35.3, 329.0], [35.4, 329.0], [35.5, 329.0], [35.6, 329.0], [35.7, 329.0], [35.8, 329.0], [35.9, 329.0], [36.0, 329.0], [36.1, 329.0], [36.2, 329.0], [36.3, 330.0], [36.4, 330.0], [36.5, 330.0], [36.6, 330.0], [36.7, 330.0], [36.8, 330.0], [36.9, 330.0], [37.0, 330.0], [37.1, 330.0], [37.2, 330.0], [37.3, 330.0], [37.4, 330.0], [37.5, 330.0], [37.6, 330.0], [37.7, 330.0], [37.8, 330.0], [37.9, 330.0], [38.0, 331.0], [38.1, 331.0], [38.2, 331.0], [38.3, 331.0], [38.4, 331.0], [38.5, 331.0], [38.6, 331.0], [38.7, 331.0], [38.8, 331.0], [38.9, 331.0], [39.0, 332.0], [39.1, 332.0], [39.2, 332.0], [39.3, 332.0], [39.4, 332.0], [39.5, 332.0], [39.6, 332.0], [39.7, 332.0], [39.8, 332.0], [39.9, 332.0], [40.0, 333.0], [40.1, 333.0], [40.2, 333.0], [40.3, 334.0], [40.4, 334.0], [40.5, 334.0], [40.6, 334.0], [40.7, 334.0], [40.8, 334.0], [40.9, 334.0], [41.0, 335.0], [41.1, 335.0], [41.2, 335.0], [41.3, 335.0], [41.4, 335.0], [41.5, 335.0], [41.6, 335.0], [41.7, 335.0], [41.8, 336.0], [41.9, 336.0], [42.0, 336.0], [42.1, 336.0], [42.2, 336.0], [42.3, 336.0], [42.4, 336.0], [42.5, 337.0], [42.6, 337.0], [42.7, 337.0], [42.8, 337.0], [42.9, 337.0], [43.0, 337.0], [43.1, 337.0], [43.2, 337.0], [43.3, 337.0], [43.4, 337.0], [43.5, 338.0], [43.6, 338.0], [43.7, 338.0], [43.8, 338.0], [43.9, 338.0], [44.0, 338.0], [44.1, 338.0], [44.2, 338.0], [44.3, 339.0], [44.4, 339.0], [44.5, 339.0], [44.6, 339.0], [44.7, 339.0], [44.8, 340.0], [44.9, 340.0], [45.0, 340.0], [45.1, 340.0], [45.2, 340.0], [45.3, 341.0], [45.4, 341.0], [45.5, 341.0], [45.6, 341.0], [45.7, 341.0], [45.8, 341.0], [45.9, 341.0], [46.0, 341.0], [46.1, 341.0], [46.2, 341.0], [46.3, 343.0], [46.4, 343.0], [46.5, 343.0], [46.6, 343.0], [46.7, 343.0], [46.8, 343.0], [46.9, 343.0], [47.0, 343.0], [47.1, 343.0], [47.2, 343.0], [47.3, 344.0], [47.4, 344.0], [47.5, 344.0], [47.6, 344.0], [47.7, 344.0], [47.8, 346.0], [47.9, 346.0], [48.0, 346.0], [48.1, 346.0], [48.2, 346.0], [48.3, 346.0], [48.4, 346.0], [48.5, 347.0], [48.6, 347.0], [48.7, 347.0], [48.8, 347.0], [48.9, 347.0], [49.0, 348.0], [49.1, 348.0], [49.2, 348.0], [49.3, 348.0], [49.4, 348.0], [49.5, 349.0], [49.6, 349.0], [49.7, 349.0], [49.8, 349.0], [49.9, 349.0], [50.0, 349.0], [50.1, 349.0], [50.2, 349.0], [50.3, 350.0], [50.4, 350.0], [50.5, 351.0], [50.6, 351.0], [50.7, 351.0], [50.8, 351.0], [50.9, 351.0], [51.0, 351.0], [51.1, 351.0], [51.2, 351.0], [51.3, 351.0], [51.4, 351.0], [51.5, 351.0], [51.6, 351.0], [51.7, 351.0], [51.8, 351.0], [51.9, 351.0], [52.0, 352.0], [52.1, 352.0], [52.2, 352.0], [52.3, 352.0], [52.4, 352.0], [52.5, 354.0], [52.6, 354.0], [52.7, 354.0], [52.8, 354.0], [52.9, 354.0], [53.0, 354.0], [53.1, 354.0], [53.2, 354.0], [53.3, 355.0], [53.4, 355.0], [53.5, 355.0], [53.6, 355.0], [53.7, 355.0], [53.8, 355.0], [53.9, 355.0], [54.0, 356.0], [54.1, 356.0], [54.2, 356.0], [54.3, 356.0], [54.4, 356.0], [54.5, 356.0], [54.6, 356.0], [54.7, 356.0], [54.8, 356.0], [54.9, 356.0], [55.0, 357.0], [55.1, 357.0], [55.2, 357.0], [55.3, 357.0], [55.4, 357.0], [55.5, 357.0], [55.6, 357.0], [55.7, 357.0], [55.8, 357.0], [55.9, 357.0], [56.0, 357.0], [56.1, 357.0], [56.2, 357.0], [56.3, 357.0], [56.4, 357.0], [56.5, 357.0], [56.6, 357.0], [56.7, 357.0], [56.8, 358.0], [56.9, 358.0], [57.0, 358.0], [57.1, 358.0], [57.2, 358.0], [57.3, 359.0], [57.4, 359.0], [57.5, 360.0], [57.6, 360.0], [57.7, 360.0], [57.8, 360.0], [57.9, 360.0], [58.0, 361.0], [58.1, 361.0], [58.2, 361.0], [58.3, 361.0], [58.4, 361.0], [58.5, 361.0], [58.6, 361.0], [58.7, 361.0], [58.8, 362.0], [58.9, 362.0], [59.0, 362.0], [59.1, 362.0], [59.2, 362.0], [59.3, 363.0], [59.4, 363.0], [59.5, 363.0], [59.6, 363.0], [59.7, 363.0], [59.8, 363.0], [59.9, 363.0], [60.0, 364.0], [60.1, 364.0], [60.2, 364.0], [60.3, 364.0], [60.4, 364.0], [60.5, 364.0], [60.6, 364.0], [60.7, 364.0], [60.8, 365.0], [60.9, 365.0], [61.0, 365.0], [61.1, 365.0], [61.2, 365.0], [61.3, 366.0], [61.4, 366.0], [61.5, 366.0], [61.6, 366.0], [61.7, 366.0], [61.8, 367.0], [61.9, 367.0], [62.0, 367.0], [62.1, 367.0], [62.2, 367.0], [62.3, 367.0], [62.4, 367.0], [62.5, 367.0], [62.6, 367.0], [62.7, 367.0], [62.8, 367.0], [62.9, 367.0], [63.0, 370.0], [63.1, 370.0], [63.2, 370.0], [63.3, 370.0], [63.4, 370.0], [63.5, 371.0], [63.6, 371.0], [63.7, 371.0], [63.8, 372.0], [63.9, 372.0], [64.0, 373.0], [64.1, 373.0], [64.2, 373.0], [64.3, 374.0], [64.4, 374.0], [64.5, 374.0], [64.6, 374.0], [64.7, 374.0], [64.8, 375.0], [64.9, 375.0], [65.0, 377.0], [65.1, 377.0], [65.2, 377.0], [65.3, 378.0], [65.4, 378.0], [65.5, 378.0], [65.6, 378.0], [65.7, 378.0], [65.8, 379.0], [65.9, 379.0], [66.0, 379.0], [66.1, 379.0], [66.2, 379.0], [66.3, 379.0], [66.4, 379.0], [66.5, 380.0], [66.6, 380.0], [66.7, 380.0], [66.8, 381.0], [66.9, 381.0], [67.0, 381.0], [67.1, 381.0], [67.2, 381.0], [67.3, 382.0], [67.4, 382.0], [67.5, 383.0], [67.6, 383.0], [67.7, 383.0], [67.8, 385.0], [67.9, 385.0], [68.0, 386.0], [68.1, 386.0], [68.2, 386.0], [68.3, 387.0], [68.4, 387.0], [68.5, 388.0], [68.6, 388.0], [68.7, 388.0], [68.8, 390.0], [68.9, 390.0], [69.0, 391.0], [69.1, 391.0], [69.2, 391.0], [69.3, 391.0], [69.4, 391.0], [69.5, 392.0], [69.6, 392.0], [69.7, 392.0], [69.8, 392.0], [69.9, 392.0], [70.0, 392.0], [70.1, 392.0], [70.2, 392.0], [70.3, 393.0], [70.4, 393.0], [70.5, 394.0], [70.6, 394.0], [70.7, 394.0], [70.8, 395.0], [70.9, 395.0], [71.0, 395.0], [71.1, 395.0], [71.2, 395.0], [71.3, 397.0], [71.4, 397.0], [71.5, 397.0], [71.6, 397.0], [71.7, 397.0], [71.8, 397.0], [71.9, 397.0], [72.0, 399.0], [72.1, 399.0], [72.2, 399.0], [72.3, 399.0], [72.4, 399.0], [72.5, 400.0], [72.6, 400.0], [72.7, 400.0], [72.8, 403.0], [72.9, 403.0], [73.0, 404.0], [73.1, 404.0], [73.2, 404.0], [73.3, 404.0], [73.4, 404.0], [73.5, 404.0], [73.6, 404.0], [73.7, 404.0], [73.8, 404.0], [73.9, 404.0], [74.0, 404.0], [74.1, 404.0], [74.2, 404.0], [74.3, 405.0], [74.4, 405.0], [74.5, 405.0], [74.6, 405.0], [74.7, 405.0], [74.8, 408.0], [74.9, 408.0], [75.0, 410.0], [75.1, 410.0], [75.2, 410.0], [75.3, 413.0], [75.4, 413.0], [75.5, 414.0], [75.6, 414.0], [75.7, 414.0], [75.8, 419.0], [75.9, 419.0], [76.0, 420.0], [76.1, 420.0], [76.2, 420.0], [76.3, 421.0], [76.4, 421.0], [76.5, 422.0], [76.6, 422.0], [76.7, 422.0], [76.8, 422.0], [76.9, 422.0], [77.0, 422.0], [77.1, 422.0], [77.2, 422.0], [77.3, 423.0], [77.4, 423.0], [77.5, 423.0], [77.6, 423.0], [77.7, 423.0], [77.8, 424.0], [77.9, 424.0], [78.0, 425.0], [78.1, 425.0], [78.2, 425.0], [78.3, 426.0], [78.4, 426.0], [78.5, 427.0], [78.6, 427.0], [78.7, 427.0], [78.8, 428.0], [78.9, 428.0], [79.0, 429.0], [79.1, 429.0], [79.2, 429.0], [79.3, 429.0], [79.4, 429.0], [79.5, 430.0], [79.6, 430.0], [79.7, 430.0], [79.8, 431.0], [79.9, 431.0], [80.0, 432.0], [80.1, 432.0], [80.2, 432.0], [80.3, 432.0], [80.4, 432.0], [80.5, 432.0], [80.6, 432.0], [80.7, 432.0], [80.8, 437.0], [80.9, 437.0], [81.0, 438.0], [81.1, 438.0], [81.2, 438.0], [81.3, 441.0], [81.4, 441.0], [81.5, 442.0], [81.6, 442.0], [81.7, 442.0], [81.8, 443.0], [81.9, 443.0], [82.0, 446.0], [82.1, 446.0], [82.2, 446.0], [82.3, 447.0], [82.4, 447.0], [82.5, 449.0], [82.6, 449.0], [82.7, 449.0], [82.8, 452.0], [82.9, 452.0], [83.0, 454.0], [83.1, 454.0], [83.2, 454.0], [83.3, 456.0], [83.4, 456.0], [83.5, 459.0], [83.6, 459.0], [83.7, 459.0], [83.8, 474.0], [83.9, 474.0], [84.0, 475.0], [84.1, 475.0], [84.2, 475.0], [84.3, 477.0], [84.4, 477.0], [84.5, 479.0], [84.6, 479.0], [84.7, 479.0], [84.8, 480.0], [84.9, 480.0], [85.0, 480.0], [85.1, 480.0], [85.2, 480.0], [85.3, 483.0], [85.4, 483.0], [85.5, 488.0], [85.6, 488.0], [85.7, 488.0], [85.8, 490.0], [85.9, 490.0], [86.0, 498.0], [86.1, 498.0], [86.2, 498.0], [86.3, 499.0], [86.4, 499.0], [86.5, 502.0], [86.6, 502.0], [86.7, 502.0], [86.8, 504.0], [86.9, 504.0], [87.0, 504.0], [87.1, 504.0], [87.2, 504.0], [87.3, 506.0], [87.4, 506.0], [87.5, 510.0], [87.6, 510.0], [87.7, 510.0], [87.8, 510.0], [87.9, 510.0], [88.0, 510.0], [88.1, 510.0], [88.2, 510.0], [88.3, 511.0], [88.4, 511.0], [88.5, 511.0], [88.6, 511.0], [88.7, 511.0], [88.8, 512.0], [88.9, 512.0], [89.0, 514.0], [89.1, 514.0], [89.2, 514.0], [89.3, 517.0], [89.4, 517.0], [89.5, 518.0], [89.6, 518.0], [89.7, 518.0], [89.8, 522.0], [89.9, 522.0], [90.0, 522.0], [90.1, 522.0], [90.2, 522.0], [90.3, 522.0], [90.4, 522.0], [90.5, 525.0], [90.6, 525.0], [90.7, 525.0], [90.8, 525.0], [90.9, 525.0], [91.0, 526.0], [91.1, 526.0], [91.2, 526.0], [91.3, 543.0], [91.4, 543.0], [91.5, 552.0], [91.6, 552.0], [91.7, 552.0], [91.8, 553.0], [91.9, 553.0], [92.0, 555.0], [92.1, 555.0], [92.2, 555.0], [92.3, 557.0], [92.4, 557.0], [92.5, 558.0], [92.6, 558.0], [92.7, 558.0], [92.8, 559.0], [92.9, 559.0], [93.0, 566.0], [93.1, 566.0], [93.2, 566.0], [93.3, 568.0], [93.4, 568.0], [93.5, 590.0], [93.6, 590.0], [93.7, 590.0], [93.8, 612.0], [93.9, 612.0], [94.0, 621.0], [94.1, 621.0], [94.2, 621.0], [94.3, 655.0], [94.4, 655.0], [94.5, 656.0], [94.6, 656.0], [94.7, 656.0], [94.8, 658.0], [94.9, 658.0], [95.0, 662.0], [95.1, 662.0], [95.2, 662.0], [95.3, 664.0], [95.4, 664.0], [95.5, 673.0], [95.6, 673.0], [95.7, 673.0], [95.8, 679.0], [95.9, 679.0], [96.0, 967.0], [96.1, 967.0], [96.2, 967.0], [96.3, 993.0], [96.4, 993.0], [96.5, 1176.0], [96.6, 1176.0], [96.7, 1176.0], [96.8, 1184.0], [96.9, 1184.0], [97.0, 1271.0], [97.1, 1271.0], [97.2, 1271.0], [97.3, 1281.0], [97.4, 1281.0], [97.5, 1285.0], [97.6, 1285.0], [97.7, 1285.0], [97.8, 1286.0], [97.9, 1286.0], [98.0, 1306.0], [98.1, 1306.0], [98.2, 1306.0], [98.3, 1315.0], [98.4, 1315.0], [98.5, 1320.0], [98.6, 1320.0], [98.7, 1320.0], [98.8, 1322.0], [98.9, 1322.0], [99.0, 1343.0], [99.1, 1343.0], [99.2, 1343.0], [99.3, 1353.0], [99.4, 1353.0], [99.5, 1357.0], [99.6, 1357.0], [99.7, 1357.0], [99.8, 1422.0], [99.9, 1422.0]], "isOverall": false, "label": "createBooking", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 200.0, "maxY": 635.0, "series": [{"data": [[1100.0, 3.0], [300.0, 242.0], [600.0, 7.0], [1200.0, 4.0], [1300.0, 1.0], [700.0, 3.0], [1400.0, 1.0], [400.0, 104.0], [800.0, 9.0], [500.0, 26.0]], "isOverall": false, "label": "updateBooking", "isController": false}, {"data": [[1200.0, 8.0], [1300.0, 70.0], [1400.0, 77.0], [1500.0, 65.0], [1600.0, 35.0], [1700.0, 13.0], [2000.0, 5.0], [2100.0, 4.0], [2300.0, 20.0], [2200.0, 7.0], [2400.0, 9.0], [2500.0, 10.0], [2600.0, 11.0], [2800.0, 5.0], [2700.0, 12.0], [2900.0, 8.0], [3000.0, 1.0], [3100.0, 2.0], [3200.0, 4.0], [3300.0, 6.0], [3400.0, 6.0], [3500.0, 1.0], [3700.0, 3.0], [3900.0, 4.0], [4000.0, 1.0], [4300.0, 1.0], [4200.0, 1.0], [4100.0, 2.0], [4400.0, 1.0], [4500.0, 1.0], [4600.0, 1.0], [4700.0, 1.0], [4800.0, 1.0], [5000.0, 1.0], [5200.0, 1.0], [5400.0, 1.0], [6400.0, 1.0]], "isOverall": false, "label": "auth", "isController": false}, {"data": [[1100.0, 1.0], [300.0, 635.0], [600.0, 5.0], [1200.0, 3.0], [1300.0, 3.0], [400.0, 129.0], [900.0, 2.0], [500.0, 13.0], [1000.0, 9.0]], "isOverall": false, "label": "getBooking", "isController": false}, {"data": [[1100.0, 3.0], [600.0, 5.0], [300.0, 243.0], [1200.0, 11.0], [1300.0, 1.0], [700.0, 5.0], [400.0, 91.0], [800.0, 3.0], [900.0, 1.0], [500.0, 36.0], [1000.0, 1.0]], "isOverall": false, "label": "updateBookingByPatch", "isController": false}, {"data": [[1100.0, 2.0], [300.0, 287.0], [600.0, 9.0], [1200.0, 4.0], [1300.0, 7.0], [1400.0, 1.0], [200.0, 3.0], [400.0, 56.0], [900.0, 2.0], [500.0, 29.0]], "isOverall": false, "label": "createBooking", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 6400.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 245.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 1791.0, "series": [{"data": [[0.0, 1791.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 364.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 245.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 2.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 141.74291666666676, "minX": 1.73472996E12, "maxY": 141.74291666666676, "series": [{"data": [[1.73472996E12, 141.74291666666676]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.73472996E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 301.3333333333333, "minX": 1.0, "maxY": 4775.0, "series": [{"data": [[2.0, 317.0], [10.0, 529.0], [19.0, 626.0], [25.0, 1175.0], [26.0, 321.0], [35.0, 322.0], [34.0, 337.0], [41.0, 347.0], [50.0, 420.0], [55.0, 359.0], [58.0, 351.8333333333333], [67.0, 397.0], [65.0, 347.0], [69.0, 416.3333333333333], [74.0, 313.0], [73.0, 364.16666666666663], [79.0, 373.0], [78.0, 350.0], [77.0, 336.0], [82.0, 352.0], [81.0, 359.6666666666667], [84.0, 324.3333333333333], [88.0, 359.0], [95.0, 309.0], [97.0, 369.0], [96.0, 344.0], [103.0, 357.0], [102.0, 356.0], [101.0, 359.0], [100.0, 348.3333333333333], [107.0, 335.5], [105.0, 317.0], [104.0, 343.0], [111.0, 357.0], [109.0, 318.0], [108.0, 340.0], [115.0, 422.0], [114.0, 428.0], [113.0, 449.0], [112.0, 385.2], [119.0, 375.0], [123.0, 348.0], [122.0, 340.0], [121.0, 352.0], [120.0, 375.0], [124.0, 347.8], [127.0, 321.0], [126.0, 333.0], [125.0, 334.0], [128.0, 341.6666666666667], [129.0, 327.5], [135.0, 364.0], [132.0, 320.0], [131.0, 339.5], [137.0, 397.3333333333333], [140.0, 426.0], [142.0, 396.5], [143.0, 340.6], [139.0, 362.0], [136.0, 424.0], [145.0, 418.0], [148.0, 406.0], [149.0, 423.3333333333333], [151.0, 347.4], [150.0, 491.7142857142857], [147.0, 319.0], [155.0, 367.7692307692308], [159.0, 394.85714285714283], [157.0, 367.8888888888889], [158.0, 362.73333333333335], [156.0, 379.83333333333337], [154.0, 339.19999999999993], [153.0, 488.83333333333337], [152.0, 373.0], [160.0, 428.0], [162.0, 456.5833333333333], [166.0, 528.6666666666666], [164.0, 518.909090909091], [163.0, 401.25], [167.0, 575.5555555555555], [165.0, 342.0], [161.0, 365.77777777777777], [168.0, 653.6363636363639], [170.0, 380.0], [174.0, 400.0], [175.0, 411.16666666666663], [169.0, 417.6666666666667], [177.0, 475.0], [179.0, 472.0], [180.0, 479.0], [182.0, 490.1428571428571], [181.0, 509.42857142857144], [183.0, 551.7272727272726], [178.0, 414.0], [176.0, 431.0], [184.0, 440.5], [186.0, 447.8], [187.0, 424.3333333333333], [185.0, 447.5]], "isOverall": false, "label": "updateBooking", "isController": false}, {"data": [[142.4025000000002, 423.9425000000002]], "isOverall": false, "label": "updateBooking-Aggregated", "isController": false}, {"data": [[19.0, 3987.0], [58.0, 2740.0], [69.0, 2345.5], [72.0, 2273.0], [83.0, 1542.0], [84.0, 1848.6666666666667], [87.0, 1280.0], [88.0, 2266.3333333333335], [89.0, 1337.6666666666667], [91.0, 1329.0], [90.0, 2608.0], [94.0, 1365.0], [95.0, 1830.5], [92.0, 2715.0], [96.0, 1368.0], [97.0, 1356.0], [100.0, 3442.4285714285716], [102.0, 1345.6666666666667], [104.0, 2014.75], [107.0, 1651.6], [105.0, 1464.0], [108.0, 1555.6], [110.0, 1355.0], [111.0, 1375.0], [109.0, 1854.0], [113.0, 1402.0], [115.0, 1644.3333333333333], [112.0, 1778.8333333333333], [116.0, 1554.8], [119.0, 2141.0], [117.0, 2357.0], [123.0, 1366.25], [122.0, 1427.0], [121.0, 1480.5], [126.0, 2546.0], [127.0, 2226.25], [125.0, 2086.5], [128.0, 1346.0], [129.0, 1736.5], [130.0, 2081.6666666666665], [131.0, 1936.6666666666667], [132.0, 2868.0], [133.0, 1354.0], [137.0, 1431.5], [138.0, 2145.0], [139.0, 2535.285714285714], [141.0, 1467.0], [143.0, 1963.6], [142.0, 2762.5], [136.0, 2153.0], [144.0, 1387.75], [145.0, 2604.875], [147.0, 2726.166666666667], [148.0, 2342.0], [149.0, 2155.5], [150.0, 1945.4], [151.0, 2077.1428571428573], [152.0, 2409.0], [155.0, 1994.470588235294], [157.0, 1926.0769230769233], [158.0, 2051.0454545454545], [154.0, 2193.625], [153.0, 1837.375], [159.0, 1937.545454545455], [156.0, 2032.0], [160.0, 1721.4], [161.0, 1718.5555555555557], [162.0, 1738.5833333333335], [164.0, 2193.5454545454545], [165.0, 2379.5], [166.0, 2169.2], [163.0, 2625.4444444444443], [167.0, 2518.0], [168.0, 1459.0], [169.0, 1622.8571428571427], [170.0, 1794.2857142857142], [172.0, 2052.3333333333335], [173.0, 1865.25], [174.0, 1422.0], [175.0, 1410.0], [177.0, 1373.0], [179.0, 1420.5], [181.0, 1385.0], [182.0, 1716.1764705882354], [180.0, 1715.5], [183.0, 1396.4285714285713], [176.0, 1519.0], [184.0, 1577.4285714285716], [185.0, 2020.0], [186.0, 4775.0], [187.0, 3127.5]], "isOverall": false, "label": "auth", "isController": false}, {"data": [[146.15999999999994, 1967.3449999999993]], "isOverall": false, "label": "auth-Aggregated", "isController": false}, {"data": [[2.0, 315.0], [4.0, 353.5], [5.0, 311.0], [6.0, 331.5], [7.0, 466.0], [8.0, 440.0], [10.0, 426.0], [13.0, 346.3333333333333], [14.0, 353.0], [19.0, 514.1666666666666], [20.0, 310.0], [21.0, 303.0], [22.0, 307.0], [23.0, 330.0], [24.0, 328.0], [25.0, 326.0], [26.0, 321.5], [27.0, 333.0], [28.0, 333.0], [29.0, 322.0], [30.0, 321.0], [31.0, 318.0], [33.0, 309.0], [32.0, 315.0], [35.0, 304.0], [34.0, 561.3333333333334], [37.0, 315.0], [36.0, 327.0], [41.0, 320.8], [51.0, 374.0], [50.0, 397.77777777777777], [53.0, 370.0], [52.0, 374.0], [55.0, 360.0], [54.0, 352.0], [57.0, 355.0], [56.0, 357.0], [58.0, 337.4], [61.0, 333.0], [60.0, 329.0], [69.0, 428.5], [75.0, 343.0], [74.0, 335.0], [73.0, 378.5714285714286], [72.0, 331.0], [79.0, 334.6666666666667], [78.0, 316.0], [77.0, 333.0], [76.0, 338.0], [83.0, 323.0], [82.0, 346.6666666666667], [81.0, 332.0], [80.0, 340.0], [84.0, 314.5], [91.0, 317.0], [90.0, 314.5], [89.0, 313.0], [88.0, 347.44444444444446], [95.0, 312.75], [94.0, 309.5], [93.0, 319.0], [92.0, 332.0], [99.0, 352.0], [98.0, 325.0], [97.0, 337.0], [96.0, 329.0], [103.0, 340.0], [102.0, 328.0], [101.0, 362.0], [100.0, 350.3], [107.0, 316.0], [105.0, 309.0], [104.0, 336.0], [108.0, 318.3333333333333], [109.0, 311.0], [110.0, 314.0], [111.0, 336.5], [113.0, 379.2], [114.0, 335.3333333333333], [115.0, 352.25], [112.0, 444.875], [119.0, 363.0], [118.0, 370.5], [117.0, 379.0], [116.0, 374.0], [121.0, 350.75], [123.0, 339.25], [122.0, 318.0], [120.0, 368.0], [125.0, 328.0], [126.0, 314.0], [127.0, 326.25], [124.0, 326.5], [128.0, 313.0], [129.0, 319.0], [130.0, 321.0], [131.0, 360.3333333333333], [135.0, 349.0], [134.0, 326.25], [132.0, 311.0], [136.0, 360.75], [139.0, 359.625], [140.0, 393.0], [142.0, 359.0], [143.0, 317.0], [141.0, 304.0], [138.0, 365.0], [137.0, 380.6666666666667], [144.0, 380.5], [145.0, 380.6666666666667], [147.0, 406.0], [148.0, 393.0], [149.0, 378.0], [150.0, 372.6], [151.0, 336.5], [146.0, 318.0], [159.0, 332.27777777777777], [158.0, 346.87179487179486], [157.0, 338.3846153846153], [156.0, 394.0], [155.0, 361.41666666666674], [154.0, 331.38095238095235], [153.0, 441.77777777777777], [152.0, 332.6], [165.0, 479.33333333333337], [166.0, 508.93333333333334], [164.0, 424.6785714285714], [163.0, 457.22222222222223], [162.0, 349.59259259259255], [167.0, 627.25], [161.0, 369.7368421052632], [160.0, 348.4166666666666], [168.0, 481.1111111111111], [170.0, 360.5], [169.0, 438.875], [171.0, 552.2], [173.0, 370.3636363636364], [174.0, 375.85714285714283], [175.0, 362.59999999999997], [172.0, 383.3333333333333], [177.0, 386.85714285714283], [179.0, 383.3333333333333], [180.0, 407.08333333333326], [181.0, 486.6666666666666], [182.0, 404.45454545454544], [183.0, 406.54166666666674], [178.0, 344.1666666666667], [176.0, 358.6666666666667], [184.0, 449.1], [185.0, 416.875], [187.0, 368.2], [186.0, 403.5], [1.0, 329.0]], "isOverall": false, "label": "getBooking", "isController": false}, {"data": [[138.8000000000001, 380.52999999999975]], "isOverall": false, "label": "getBooking-Aggregated", "isController": false}, {"data": [[5.0, 318.0], [8.0, 452.6666666666667], [10.0, 508.0], [13.0, 772.5], [14.0, 318.0], [19.0, 399.0], [22.0, 1210.0], [25.0, 343.5], [26.0, 331.0], [27.0, 341.5], [28.0, 331.0], [35.0, 494.25], [34.0, 306.0], [36.0, 319.0], [41.0, 365.0], [50.0, 419.3333333333333], [58.0, 339.125], [61.0, 351.0], [63.0, 346.0], [67.0, 389.0], [66.0, 432.0], [65.0, 358.0], [69.0, 412.0], [79.0, 365.0], [78.0, 365.0], [90.0, 330.0], [88.0, 356.8999999999999], [95.0, 327.0], [94.0, 317.0], [92.0, 328.2], [99.0, 354.0], [97.0, 357.0], [103.0, 359.0], [102.0, 365.0], [100.0, 373.0], [107.0, 339.6666666666667], [104.0, 327.25], [111.0, 357.0], [109.0, 330.5], [108.0, 323.0], [112.0, 372.75], [119.0, 415.0], [117.0, 400.0], [123.0, 336.0], [122.0, 345.0], [127.0, 326.0], [126.0, 315.5], [135.0, 388.3333333333333], [134.0, 369.75], [132.0, 318.0], [139.0, 342.0], [143.0, 339.5], [142.0, 334.5], [137.0, 393.0], [136.0, 423.1666666666667], [144.0, 510.0], [145.0, 535.6666666666666], [147.0, 403.3333333333333], [151.0, 315.0], [149.0, 337.0], [150.0, 376.0], [154.0, 387.4], [157.0, 386.8095238095238], [159.0, 453.2], [158.0, 381.1], [156.0, 317.25], [155.0, 351.07142857142867], [153.0, 344.5], [152.0, 350.4], [164.0, 499.875], [167.0, 888.5], [166.0, 727.1999999999999], [165.0, 512.0], [161.0, 392.58333333333337], [160.0, 356.33333333333337], [162.0, 438.16666666666663], [163.0, 330.0], [168.0, 577.1666666666666], [169.0, 415.2727272727273], [173.0, 397.0], [174.0, 363.0], [175.0, 423.0], [172.0, 425.0], [170.0, 451.3333333333333], [179.0, 450.0], [181.0, 496.0], [180.0, 513.0], [182.0, 538.7058823529412], [183.0, 535.6000000000003], [176.0, 431.0], [184.0, 554.2222222222222], [187.0, 407.5], [186.0, 1223.0], [185.0, 519.0], [1.0, 338.0]], "isOverall": false, "label": "updateBookingByPatch", "isController": false}, {"data": [[137.61499999999998, 434.88000000000005]], "isOverall": false, "label": "updateBookingByPatch-Aggregated", "isController": false}, {"data": [[10.0, 347.0], [41.0, 312.0], [50.0, 381.5], [58.0, 334.0], [67.0, 395.0], [73.0, 362.0], [72.0, 325.0], [79.0, 336.0], [76.0, 338.0], [85.0, 313.0], [84.0, 322.0], [88.0, 322.3333333333333], [95.0, 312.5], [92.0, 335.25], [96.0, 312.0], [97.0, 310.5], [100.0, 341.25], [101.0, 328.5], [102.0, 318.5], [103.0, 334.5], [105.0, 313.0], [107.0, 318.5], [104.0, 319.6666666666667], [108.0, 325.75], [109.0, 332.0], [110.0, 335.0], [111.0, 342.2857142857143], [113.0, 315.0], [115.0, 314.0], [112.0, 340.75], [116.0, 319.0], [118.0, 330.0], [121.0, 339.0], [122.0, 320.0], [123.0, 344.0], [124.0, 340.0], [125.0, 327.0], [126.0, 324.0], [127.0, 317.75], [128.0, 331.3333333333333], [129.0, 301.3333333333333], [130.0, 364.0], [135.0, 359.5], [134.0, 337.0], [132.0, 316.0], [131.0, 327.5], [138.0, 366.0], [139.0, 369.0], [143.0, 328.57142857142856], [142.0, 322.0], [136.0, 366.85714285714283], [144.0, 441.0], [147.0, 384.8], [149.0, 592.8], [150.0, 420.66666666666663], [151.0, 359.0], [148.0, 312.0], [145.0, 330.5], [152.0, 518.0], [153.0, 447.0], [154.0, 378.22222222222223], [159.0, 356.0], [157.0, 343.6190476190476], [158.0, 345.3529411764705], [155.0, 467.5833333333333], [156.0, 481.5], [165.0, 501.9], [166.0, 541.8571428571429], [164.0, 584.421052631579], [162.0, 420.62500000000006], [167.0, 435.19999999999993], [163.0, 333.3636363636364], [161.0, 394.25], [160.0, 326.85714285714283], [168.0, 518.6], [169.0, 505.8571428571429], [170.0, 336.0], [174.0, 383.5], [175.0, 359.0], [173.0, 370.0], [171.0, 356.0], [172.0, 1343.0], [177.0, 387.5], [181.0, 422.6363636363636], [180.0, 413.25], [182.0, 402.42857142857144], [183.0, 420.375], [179.0, 382.0], [178.0, 357.0], [184.0, 574.5], [185.0, 700.3333333333334], [187.0, 1223.5], [186.0, 1315.0]], "isOverall": false, "label": "createBooking", "isController": false}, {"data": [[146.67999999999972, 409.01000000000005]], "isOverall": false, "label": "createBooking-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 187.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 12653.733333333334, "minX": 1.73472996E12, "maxY": 36075.0, "series": [{"data": [[1.73472996E12, 36075.0]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.73472996E12, 12653.733333333334]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.73472996E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 380.52999999999975, "minX": 1.73472996E12, "maxY": 1967.3449999999993, "series": [{"data": [[1.73472996E12, 423.9425000000002]], "isOverall": false, "label": "updateBooking", "isController": false}, {"data": [[1.73472996E12, 1967.3449999999993]], "isOverall": false, "label": "auth", "isController": false}, {"data": [[1.73472996E12, 380.52999999999975]], "isOverall": false, "label": "getBooking", "isController": false}, {"data": [[1.73472996E12, 434.88000000000005]], "isOverall": false, "label": "updateBookingByPatch", "isController": false}, {"data": [[1.73472996E12, 409.01000000000005]], "isOverall": false, "label": "createBooking", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.73472996E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 380.51750000000044, "minX": 1.73472996E12, "maxY": 1967.3250000000007, "series": [{"data": [[1.73472996E12, 423.9275000000001]], "isOverall": false, "label": "updateBooking", "isController": false}, {"data": [[1.73472996E12, 1967.3250000000007]], "isOverall": false, "label": "auth", "isController": false}, {"data": [[1.73472996E12, 380.51750000000044]], "isOverall": false, "label": "getBooking", "isController": false}, {"data": [[1.73472996E12, 434.8625]], "isOverall": false, "label": "updateBookingByPatch", "isController": false}, {"data": [[1.73472996E12, 408.99500000000006]], "isOverall": false, "label": "createBooking", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.73472996E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.73472996E12, "maxY": 1593.4150000000002, "series": [{"data": [[1.73472996E12, 0.0]], "isOverall": false, "label": "updateBooking", "isController": false}, {"data": [[1.73472996E12, 1593.4150000000002]], "isOverall": false, "label": "auth", "isController": false}, {"data": [[1.73472996E12, 0.0]], "isOverall": false, "label": "getBooking", "isController": false}, {"data": [[1.73472996E12, 0.0]], "isOverall": false, "label": "updateBookingByPatch", "isController": false}, {"data": [[1.73472996E12, 0.0]], "isOverall": false, "label": "createBooking", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.73472996E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 297.0, "minX": 1.73472996E12, "maxY": 6428.0, "series": [{"data": [[1.73472996E12, 6428.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.73472996E12, 297.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.73472996E12, 1509.9]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.73472996E12, 3472.639999999992]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.73472996E12, 374.0]], "isOverall": false, "label": "Median", "isController": false}, {"data": [[1.73472996E12, 2272.2999999999975]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.73472996E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 340.0, "minX": 4.0, "maxY": 832.5, "series": [{"data": [[4.0, 832.5], [269.0, 454.0], [256.0, 411.5], [262.0, 361.0], [138.0, 664.5], [143.0, 355.0], [38.0, 359.0], [91.0, 348.0], [217.0, 347.0], [226.0, 344.0], [234.0, 340.0], [249.0, 346.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 269.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 340.0, "minX": 4.0, "maxY": 832.0, "series": [{"data": [[4.0, 832.0], [269.0, 454.0], [256.0, 411.5], [262.0, 360.5], [138.0, 664.5], [143.0, 355.0], [38.0, 359.0], [91.0, 348.0], [217.0, 347.0], [226.0, 344.0], [234.0, 340.0], [249.0, 346.0]], "isOverall": false, "label": "Successes", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 269.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 40.0, "minX": 1.73472996E12, "maxY": 40.0, "series": [{"data": [[1.73472996E12, 40.0]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.73472996E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 40.0, "minX": 1.73472996E12, "maxY": 40.0, "series": [{"data": [[1.73472996E12, 40.0]], "isOverall": false, "label": "200", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.73472996E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 6.666666666666667, "minX": 1.73472996E12, "maxY": 13.333333333333334, "series": [{"data": [[1.73472996E12, 13.333333333333334]], "isOverall": false, "label": "getBooking-success", "isController": false}, {"data": [[1.73472996E12, 6.666666666666667]], "isOverall": false, "label": "createBooking-success", "isController": false}, {"data": [[1.73472996E12, 6.666666666666667]], "isOverall": false, "label": "updateBookingByPatch-success", "isController": false}, {"data": [[1.73472996E12, 6.666666666666667]], "isOverall": false, "label": "updateBooking-success", "isController": false}, {"data": [[1.73472996E12, 6.666666666666667]], "isOverall": false, "label": "auth-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.73472996E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 40.0, "minX": 1.73472996E12, "maxY": 40.0, "series": [{"data": [[1.73472996E12, 40.0]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.73472996E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 21600000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

